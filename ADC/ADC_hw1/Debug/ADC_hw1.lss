
ADC_hw1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000048  00800100  00000752  000007e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000752  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800148  00800148  0000082e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000082e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000088c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  000008cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c9c  00000000  00000000  00000944  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a91  00000000  00000000  000015e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004e9  00000000  00000000  00002071  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000011c  00000000  00000000  0000255c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004f3  00000000  00000000  00002678  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000309  00000000  00000000  00002b6b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00002e74  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e5       	ldi	r30, 0x52	; 82
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a8 34       	cpi	r26, 0x48	; 72
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a8 e4       	ldi	r26, 0x48	; 72
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ae 34       	cpi	r26, 0x4E	; 78
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	1b d0       	rcall	.+54     	; 0xfa <main>
  c4:	44 c3       	rjmp	.+1672   	; 0x74e <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <ADC_init>:
= FDEV_SETUP_STREAM(NULL, UART1_rx, _FDEV_SETUP_READ);

void ADC_init(uint8_t ch)
{
	
	ADMUX |= _BV(REFS0);		//기준전압 AVCC
  c8:	97 b1       	in	r25, 0x07	; 7
  ca:	90 64       	ori	r25, 0x40	; 64
  cc:	97 b9       	out	0x07, r25	; 7
	
	ADCSRA |= 0x07;				//분주비 128
  ce:	96 b1       	in	r25, 0x06	; 6
  d0:	97 60       	ori	r25, 0x07	; 7
  d2:	96 b9       	out	0x06, r25	; 6
	
	ADCSRA |= _BV(ADEN);		//ADC ENABLE
  d4:	96 b1       	in	r25, 0x06	; 6
  d6:	90 68       	ori	r25, 0x80	; 128
  d8:	96 b9       	out	0x06, r25	; 6
	ADCSRA |= _BV(ADFR);		//프리러닝 모드
  da:	96 b1       	in	r25, 0x06	; 6
  dc:	90 62       	ori	r25, 0x20	; 32
  de:	96 b9       	out	0x06, r25	; 6
	ADMUX = (ADMUX & 0xE0) | ch;//채널 선택
  e0:	97 b1       	in	r25, 0x07	; 7
  e2:	90 7e       	andi	r25, 0xE0	; 224
  e4:	89 2b       	or	r24, r25
  e6:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= _BV(ADSC);		//AD변환 시작
  e8:	86 b1       	in	r24, 0x06	; 6
  ea:	80 64       	ori	r24, 0x40	; 64
  ec:	86 b9       	out	0x06, r24	; 6
  ee:	08 95       	ret

000000f0 <read_ADC>:
}

int read_ADC(void)
{
	while ( !(ADCSRA & _BV(ADIF)) );
  f0:	34 9b       	sbis	0x06, 4	; 6
  f2:	fe cf       	rjmp	.-4      	; 0xf0 <read_ADC>
	return ADC;
  f4:	84 b1       	in	r24, 0x04	; 4
  f6:	95 b1       	in	r25, 0x05	; 5
}
  f8:	08 95       	ret

000000fa <main>:

int main(void)
{
	int read = 0;
	
	stdout = &OUTPUT;
  fa:	e8 e4       	ldi	r30, 0x48	; 72
  fc:	f1 e0       	ldi	r31, 0x01	; 1
  fe:	8e e0       	ldi	r24, 0x0E	; 14
 100:	91 e0       	ldi	r25, 0x01	; 1
 102:	93 83       	std	Z+3, r25	; 0x03
 104:	82 83       	std	Z+2, r24	; 0x02
	stdin = &INPUT;
 106:	80 e0       	ldi	r24, 0x00	; 0
 108:	91 e0       	ldi	r25, 0x01	; 1
 10a:	91 83       	std	Z+1, r25	; 0x01
 10c:	80 83       	st	Z, r24
	
	DDRA=0XFF;
 10e:	8f ef       	ldi	r24, 0xFF	; 255
 110:	8a bb       	out	0x1a, r24	; 26
	
	UART1_init();
 112:	37 d0       	rcall	.+110    	; 0x182 <UART1_init>
	ADC_init(0);
 114:	80 e0       	ldi	r24, 0x00	; 0
	
    while (1) 
    {
		read = read_ADC();
 116:	d8 df       	rcall	.-80     	; 0xc8 <ADC_init>
 118:	eb df       	rcall	.-42     	; 0xf0 <read_ADC>
 11a:	fc 01       	movw	r30, r24
		uint8_t pattern = 0;
		int LED_count = (read >> 7) + 1;
 11c:	bc 01       	movw	r22, r24
 11e:	66 0f       	add	r22, r22
 120:	67 2f       	mov	r22, r23
 122:	66 1f       	adc	r22, r22
 124:	77 0b       	sbc	r23, r23
 126:	6f 5f       	subi	r22, 0xFF	; 255
 128:	7f 4f       	sbci	r23, 0xFF	; 255
		for(int i = 0; i < LED_count; i++){
 12a:	20 e0       	ldi	r18, 0x00	; 0
 12c:	30 e0       	ldi	r19, 0x00	; 0
	ADC_init(0);
	
    while (1) 
    {
		read = read_ADC();
		uint8_t pattern = 0;
 12e:	90 e0       	ldi	r25, 0x00	; 0
		int LED_count = (read >> 7) + 1;
		for(int i = 0; i < LED_count; i++){
 130:	0b c0       	rjmp	.+22     	; 0x148 <main+0x4e>
			pattern |= (0x01 << i);
 132:	41 e0       	ldi	r20, 0x01	; 1
 134:	50 e0       	ldi	r21, 0x00	; 0
 136:	02 2e       	mov	r0, r18
 138:	02 c0       	rjmp	.+4      	; 0x13e <main+0x44>
 13a:	44 0f       	add	r20, r20
 13c:	55 1f       	adc	r21, r21
 13e:	0a 94       	dec	r0
 140:	e2 f7       	brpl	.-8      	; 0x13a <main+0x40>
 142:	94 2b       	or	r25, r20
    while (1) 
    {
		read = read_ADC();
		uint8_t pattern = 0;
		int LED_count = (read >> 7) + 1;
		for(int i = 0; i < LED_count; i++){
 144:	2f 5f       	subi	r18, 0xFF	; 255
 146:	3f 4f       	sbci	r19, 0xFF	; 255
 148:	26 17       	cp	r18, r22
 14a:	37 07       	cpc	r19, r23
 14c:	94 f3       	brlt	.-28     	; 0x132 <main+0x38>
			pattern |= (0x01 << i);
		}
		PORTA = pattern;
 14e:	9b bb       	out	0x1b, r25	; 27
		printf("ADC = %d|\t%d 개 LED가 켜졌습니다.\r\n", read, LED_count);
 150:	7f 93       	push	r23
 152:	6f 93       	push	r22
 154:	ff 93       	push	r31
 156:	ef 93       	push	r30
 158:	8c e1       	ldi	r24, 0x1C	; 28
 15a:	91 e0       	ldi	r25, 0x01	; 1
 15c:	9f 93       	push	r25
 15e:	8f 93       	push	r24
 160:	36 d0       	rcall	.+108    	; 0x1ce <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 162:	2f ef       	ldi	r18, 0xFF	; 255
 164:	83 ed       	ldi	r24, 0xD3	; 211
 166:	90 e3       	ldi	r25, 0x30	; 48
 168:	21 50       	subi	r18, 0x01	; 1
 16a:	80 40       	sbci	r24, 0x00	; 0
 16c:	90 40       	sbci	r25, 0x00	; 0
 16e:	e1 f7       	brne	.-8      	; 0x168 <main+0x6e>
 170:	00 c0       	rjmp	.+0      	; 0x172 <main+0x78>
 172:	00 00       	nop
 174:	0f 90       	pop	r0
 176:	0f 90       	pop	r0
 178:	0f 90       	pop	r0
 17a:	0f 90       	pop	r0
 17c:	0f 90       	pop	r0
 17e:	0f 90       	pop	r0
 180:	cb cf       	rjmp	.-106    	; 0x118 <main+0x1e>

00000182 <UART1_init>:
#include <avr/sfr_defs.h>
#include <stdio.h>

void UART1_init(void)
{
	UBRR1H = 0x00;			//통신 속도 9600
 182:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
	UBRR1L = 207;			//통신 속도 9600
 186:	8f ec       	ldi	r24, 0xCF	; 207
 188:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
	UCSR1A |= _BV(U2X1);	//2배속 모드
 18c:	eb e9       	ldi	r30, 0x9B	; 155
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	80 81       	ld	r24, Z
 192:	82 60       	ori	r24, 0x02	; 2
 194:	80 83       	st	Z, r24
	UCSR1C |= 0X06;			//비동기, 8비트데이터, 패리티 없음, 1비트 정지 비트 모드
 196:	ed e9       	ldi	r30, 0x9D	; 157
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	80 81       	ld	r24, Z
 19c:	86 60       	ori	r24, 0x06	; 6
 19e:	80 83       	st	Z, r24
	UCSR1B |= _BV(RXEN1);	//수신 활성화
 1a0:	ea e9       	ldi	r30, 0x9A	; 154
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	80 81       	ld	r24, Z
 1a6:	80 61       	ori	r24, 0x10	; 16
 1a8:	80 83       	st	Z, r24
	UCSR1B |= _BV(TXEN1);	//발신 활성화
 1aa:	80 81       	ld	r24, Z
 1ac:	88 60       	ori	r24, 0x08	; 8
 1ae:	80 83       	st	Z, r24
 1b0:	08 95       	ret

000001b2 <UART1_rx>:
}
unsigned char UART1_rx(void)
{
	while( !(UCSR1A&(1 << RXC1)) );//수신 대기
 1b2:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 1b6:	88 23       	and	r24, r24
 1b8:	e4 f7       	brge	.-8      	; 0x1b2 <UART1_rx>
	return UDR1;
 1ba:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
}
 1be:	08 95       	ret

000001c0 <UART1_tx>:
void UART1_tx(unsigned char data)
{
	while( !(UCSR1A&(1 << UDRE1)) );//송신 대기
 1c0:	90 91 9b 00 	lds	r25, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 1c4:	95 ff       	sbrs	r25, 5
 1c6:	fc cf       	rjmp	.-8      	; 0x1c0 <UART1_tx>
	UDR1 = data;					//데이터 전송
 1c8:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 1cc:	08 95       	ret

000001ce <printf>:
 1ce:	cf 93       	push	r28
 1d0:	df 93       	push	r29
 1d2:	cd b7       	in	r28, 0x3d	; 61
 1d4:	de b7       	in	r29, 0x3e	; 62
 1d6:	ae 01       	movw	r20, r28
 1d8:	4b 5f       	subi	r20, 0xFB	; 251
 1da:	5f 4f       	sbci	r21, 0xFF	; 255
 1dc:	fa 01       	movw	r30, r20
 1de:	61 91       	ld	r22, Z+
 1e0:	71 91       	ld	r23, Z+
 1e2:	af 01       	movw	r20, r30
 1e4:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <__data_end+0x2>
 1e8:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <__data_end+0x3>
 1ec:	03 d0       	rcall	.+6      	; 0x1f4 <vfprintf>
 1ee:	df 91       	pop	r29
 1f0:	cf 91       	pop	r28
 1f2:	08 95       	ret

000001f4 <vfprintf>:
 1f4:	2f 92       	push	r2
 1f6:	3f 92       	push	r3
 1f8:	4f 92       	push	r4
 1fa:	5f 92       	push	r5
 1fc:	6f 92       	push	r6
 1fe:	7f 92       	push	r7
 200:	8f 92       	push	r8
 202:	9f 92       	push	r9
 204:	af 92       	push	r10
 206:	bf 92       	push	r11
 208:	cf 92       	push	r12
 20a:	df 92       	push	r13
 20c:	ef 92       	push	r14
 20e:	ff 92       	push	r15
 210:	0f 93       	push	r16
 212:	1f 93       	push	r17
 214:	cf 93       	push	r28
 216:	df 93       	push	r29
 218:	cd b7       	in	r28, 0x3d	; 61
 21a:	de b7       	in	r29, 0x3e	; 62
 21c:	2b 97       	sbiw	r28, 0x0b	; 11
 21e:	0f b6       	in	r0, 0x3f	; 63
 220:	f8 94       	cli
 222:	de bf       	out	0x3e, r29	; 62
 224:	0f be       	out	0x3f, r0	; 63
 226:	cd bf       	out	0x3d, r28	; 61
 228:	6c 01       	movw	r12, r24
 22a:	7b 01       	movw	r14, r22
 22c:	8a 01       	movw	r16, r20
 22e:	fc 01       	movw	r30, r24
 230:	17 82       	std	Z+7, r1	; 0x07
 232:	16 82       	std	Z+6, r1	; 0x06
 234:	83 81       	ldd	r24, Z+3	; 0x03
 236:	81 ff       	sbrs	r24, 1
 238:	bf c1       	rjmp	.+894    	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
 23a:	ce 01       	movw	r24, r28
 23c:	01 96       	adiw	r24, 0x01	; 1
 23e:	3c 01       	movw	r6, r24
 240:	f6 01       	movw	r30, r12
 242:	93 81       	ldd	r25, Z+3	; 0x03
 244:	f7 01       	movw	r30, r14
 246:	93 fd       	sbrc	r25, 3
 248:	85 91       	lpm	r24, Z+
 24a:	93 ff       	sbrs	r25, 3
 24c:	81 91       	ld	r24, Z+
 24e:	7f 01       	movw	r14, r30
 250:	88 23       	and	r24, r24
 252:	09 f4       	brne	.+2      	; 0x256 <vfprintf+0x62>
 254:	ad c1       	rjmp	.+858    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 256:	85 32       	cpi	r24, 0x25	; 37
 258:	39 f4       	brne	.+14     	; 0x268 <vfprintf+0x74>
 25a:	93 fd       	sbrc	r25, 3
 25c:	85 91       	lpm	r24, Z+
 25e:	93 ff       	sbrs	r25, 3
 260:	81 91       	ld	r24, Z+
 262:	7f 01       	movw	r14, r30
 264:	85 32       	cpi	r24, 0x25	; 37
 266:	21 f4       	brne	.+8      	; 0x270 <vfprintf+0x7c>
 268:	b6 01       	movw	r22, r12
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	d6 d1       	rcall	.+940    	; 0x61a <fputc>
 26e:	e8 cf       	rjmp	.-48     	; 0x240 <vfprintf+0x4c>
 270:	91 2c       	mov	r9, r1
 272:	21 2c       	mov	r2, r1
 274:	31 2c       	mov	r3, r1
 276:	ff e1       	ldi	r31, 0x1F	; 31
 278:	f3 15       	cp	r31, r3
 27a:	d8 f0       	brcs	.+54     	; 0x2b2 <vfprintf+0xbe>
 27c:	8b 32       	cpi	r24, 0x2B	; 43
 27e:	79 f0       	breq	.+30     	; 0x29e <vfprintf+0xaa>
 280:	38 f4       	brcc	.+14     	; 0x290 <vfprintf+0x9c>
 282:	80 32       	cpi	r24, 0x20	; 32
 284:	79 f0       	breq	.+30     	; 0x2a4 <vfprintf+0xb0>
 286:	83 32       	cpi	r24, 0x23	; 35
 288:	a1 f4       	brne	.+40     	; 0x2b2 <vfprintf+0xbe>
 28a:	23 2d       	mov	r18, r3
 28c:	20 61       	ori	r18, 0x10	; 16
 28e:	1d c0       	rjmp	.+58     	; 0x2ca <vfprintf+0xd6>
 290:	8d 32       	cpi	r24, 0x2D	; 45
 292:	61 f0       	breq	.+24     	; 0x2ac <vfprintf+0xb8>
 294:	80 33       	cpi	r24, 0x30	; 48
 296:	69 f4       	brne	.+26     	; 0x2b2 <vfprintf+0xbe>
 298:	23 2d       	mov	r18, r3
 29a:	21 60       	ori	r18, 0x01	; 1
 29c:	16 c0       	rjmp	.+44     	; 0x2ca <vfprintf+0xd6>
 29e:	83 2d       	mov	r24, r3
 2a0:	82 60       	ori	r24, 0x02	; 2
 2a2:	38 2e       	mov	r3, r24
 2a4:	e3 2d       	mov	r30, r3
 2a6:	e4 60       	ori	r30, 0x04	; 4
 2a8:	3e 2e       	mov	r3, r30
 2aa:	2a c0       	rjmp	.+84     	; 0x300 <vfprintf+0x10c>
 2ac:	f3 2d       	mov	r31, r3
 2ae:	f8 60       	ori	r31, 0x08	; 8
 2b0:	1d c0       	rjmp	.+58     	; 0x2ec <vfprintf+0xf8>
 2b2:	37 fc       	sbrc	r3, 7
 2b4:	2d c0       	rjmp	.+90     	; 0x310 <vfprintf+0x11c>
 2b6:	20 ed       	ldi	r18, 0xD0	; 208
 2b8:	28 0f       	add	r18, r24
 2ba:	2a 30       	cpi	r18, 0x0A	; 10
 2bc:	40 f0       	brcs	.+16     	; 0x2ce <vfprintf+0xda>
 2be:	8e 32       	cpi	r24, 0x2E	; 46
 2c0:	b9 f4       	brne	.+46     	; 0x2f0 <vfprintf+0xfc>
 2c2:	36 fc       	sbrc	r3, 6
 2c4:	75 c1       	rjmp	.+746    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 2c6:	23 2d       	mov	r18, r3
 2c8:	20 64       	ori	r18, 0x40	; 64
 2ca:	32 2e       	mov	r3, r18
 2cc:	19 c0       	rjmp	.+50     	; 0x300 <vfprintf+0x10c>
 2ce:	36 fe       	sbrs	r3, 6
 2d0:	06 c0       	rjmp	.+12     	; 0x2de <vfprintf+0xea>
 2d2:	8a e0       	ldi	r24, 0x0A	; 10
 2d4:	98 9e       	mul	r9, r24
 2d6:	20 0d       	add	r18, r0
 2d8:	11 24       	eor	r1, r1
 2da:	92 2e       	mov	r9, r18
 2dc:	11 c0       	rjmp	.+34     	; 0x300 <vfprintf+0x10c>
 2de:	ea e0       	ldi	r30, 0x0A	; 10
 2e0:	2e 9e       	mul	r2, r30
 2e2:	20 0d       	add	r18, r0
 2e4:	11 24       	eor	r1, r1
 2e6:	22 2e       	mov	r2, r18
 2e8:	f3 2d       	mov	r31, r3
 2ea:	f0 62       	ori	r31, 0x20	; 32
 2ec:	3f 2e       	mov	r3, r31
 2ee:	08 c0       	rjmp	.+16     	; 0x300 <vfprintf+0x10c>
 2f0:	8c 36       	cpi	r24, 0x6C	; 108
 2f2:	21 f4       	brne	.+8      	; 0x2fc <vfprintf+0x108>
 2f4:	83 2d       	mov	r24, r3
 2f6:	80 68       	ori	r24, 0x80	; 128
 2f8:	38 2e       	mov	r3, r24
 2fa:	02 c0       	rjmp	.+4      	; 0x300 <vfprintf+0x10c>
 2fc:	88 36       	cpi	r24, 0x68	; 104
 2fe:	41 f4       	brne	.+16     	; 0x310 <vfprintf+0x11c>
 300:	f7 01       	movw	r30, r14
 302:	93 fd       	sbrc	r25, 3
 304:	85 91       	lpm	r24, Z+
 306:	93 ff       	sbrs	r25, 3
 308:	81 91       	ld	r24, Z+
 30a:	7f 01       	movw	r14, r30
 30c:	81 11       	cpse	r24, r1
 30e:	b3 cf       	rjmp	.-154    	; 0x276 <vfprintf+0x82>
 310:	98 2f       	mov	r25, r24
 312:	9f 7d       	andi	r25, 0xDF	; 223
 314:	95 54       	subi	r25, 0x45	; 69
 316:	93 30       	cpi	r25, 0x03	; 3
 318:	28 f4       	brcc	.+10     	; 0x324 <vfprintf+0x130>
 31a:	0c 5f       	subi	r16, 0xFC	; 252
 31c:	1f 4f       	sbci	r17, 0xFF	; 255
 31e:	9f e3       	ldi	r25, 0x3F	; 63
 320:	99 83       	std	Y+1, r25	; 0x01
 322:	0d c0       	rjmp	.+26     	; 0x33e <vfprintf+0x14a>
 324:	83 36       	cpi	r24, 0x63	; 99
 326:	31 f0       	breq	.+12     	; 0x334 <vfprintf+0x140>
 328:	83 37       	cpi	r24, 0x73	; 115
 32a:	71 f0       	breq	.+28     	; 0x348 <vfprintf+0x154>
 32c:	83 35       	cpi	r24, 0x53	; 83
 32e:	09 f0       	breq	.+2      	; 0x332 <vfprintf+0x13e>
 330:	55 c0       	rjmp	.+170    	; 0x3dc <vfprintf+0x1e8>
 332:	20 c0       	rjmp	.+64     	; 0x374 <vfprintf+0x180>
 334:	f8 01       	movw	r30, r16
 336:	80 81       	ld	r24, Z
 338:	89 83       	std	Y+1, r24	; 0x01
 33a:	0e 5f       	subi	r16, 0xFE	; 254
 33c:	1f 4f       	sbci	r17, 0xFF	; 255
 33e:	88 24       	eor	r8, r8
 340:	83 94       	inc	r8
 342:	91 2c       	mov	r9, r1
 344:	53 01       	movw	r10, r6
 346:	12 c0       	rjmp	.+36     	; 0x36c <vfprintf+0x178>
 348:	28 01       	movw	r4, r16
 34a:	f2 e0       	ldi	r31, 0x02	; 2
 34c:	4f 0e       	add	r4, r31
 34e:	51 1c       	adc	r5, r1
 350:	f8 01       	movw	r30, r16
 352:	a0 80       	ld	r10, Z
 354:	b1 80       	ldd	r11, Z+1	; 0x01
 356:	36 fe       	sbrs	r3, 6
 358:	03 c0       	rjmp	.+6      	; 0x360 <vfprintf+0x16c>
 35a:	69 2d       	mov	r22, r9
 35c:	70 e0       	ldi	r23, 0x00	; 0
 35e:	02 c0       	rjmp	.+4      	; 0x364 <vfprintf+0x170>
 360:	6f ef       	ldi	r22, 0xFF	; 255
 362:	7f ef       	ldi	r23, 0xFF	; 255
 364:	c5 01       	movw	r24, r10
 366:	4e d1       	rcall	.+668    	; 0x604 <strnlen>
 368:	4c 01       	movw	r8, r24
 36a:	82 01       	movw	r16, r4
 36c:	f3 2d       	mov	r31, r3
 36e:	ff 77       	andi	r31, 0x7F	; 127
 370:	3f 2e       	mov	r3, r31
 372:	15 c0       	rjmp	.+42     	; 0x39e <vfprintf+0x1aa>
 374:	28 01       	movw	r4, r16
 376:	22 e0       	ldi	r18, 0x02	; 2
 378:	42 0e       	add	r4, r18
 37a:	51 1c       	adc	r5, r1
 37c:	f8 01       	movw	r30, r16
 37e:	a0 80       	ld	r10, Z
 380:	b1 80       	ldd	r11, Z+1	; 0x01
 382:	36 fe       	sbrs	r3, 6
 384:	03 c0       	rjmp	.+6      	; 0x38c <vfprintf+0x198>
 386:	69 2d       	mov	r22, r9
 388:	70 e0       	ldi	r23, 0x00	; 0
 38a:	02 c0       	rjmp	.+4      	; 0x390 <vfprintf+0x19c>
 38c:	6f ef       	ldi	r22, 0xFF	; 255
 38e:	7f ef       	ldi	r23, 0xFF	; 255
 390:	c5 01       	movw	r24, r10
 392:	2d d1       	rcall	.+602    	; 0x5ee <strnlen_P>
 394:	4c 01       	movw	r8, r24
 396:	f3 2d       	mov	r31, r3
 398:	f0 68       	ori	r31, 0x80	; 128
 39a:	3f 2e       	mov	r3, r31
 39c:	82 01       	movw	r16, r4
 39e:	33 fc       	sbrc	r3, 3
 3a0:	19 c0       	rjmp	.+50     	; 0x3d4 <vfprintf+0x1e0>
 3a2:	82 2d       	mov	r24, r2
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	88 16       	cp	r8, r24
 3a8:	99 06       	cpc	r9, r25
 3aa:	a0 f4       	brcc	.+40     	; 0x3d4 <vfprintf+0x1e0>
 3ac:	b6 01       	movw	r22, r12
 3ae:	80 e2       	ldi	r24, 0x20	; 32
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	33 d1       	rcall	.+614    	; 0x61a <fputc>
 3b4:	2a 94       	dec	r2
 3b6:	f5 cf       	rjmp	.-22     	; 0x3a2 <vfprintf+0x1ae>
 3b8:	f5 01       	movw	r30, r10
 3ba:	37 fc       	sbrc	r3, 7
 3bc:	85 91       	lpm	r24, Z+
 3be:	37 fe       	sbrs	r3, 7
 3c0:	81 91       	ld	r24, Z+
 3c2:	5f 01       	movw	r10, r30
 3c4:	b6 01       	movw	r22, r12
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	28 d1       	rcall	.+592    	; 0x61a <fputc>
 3ca:	21 10       	cpse	r2, r1
 3cc:	2a 94       	dec	r2
 3ce:	21 e0       	ldi	r18, 0x01	; 1
 3d0:	82 1a       	sub	r8, r18
 3d2:	91 08       	sbc	r9, r1
 3d4:	81 14       	cp	r8, r1
 3d6:	91 04       	cpc	r9, r1
 3d8:	79 f7       	brne	.-34     	; 0x3b8 <vfprintf+0x1c4>
 3da:	e1 c0       	rjmp	.+450    	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 3dc:	84 36       	cpi	r24, 0x64	; 100
 3de:	11 f0       	breq	.+4      	; 0x3e4 <vfprintf+0x1f0>
 3e0:	89 36       	cpi	r24, 0x69	; 105
 3e2:	39 f5       	brne	.+78     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 3e4:	f8 01       	movw	r30, r16
 3e6:	37 fe       	sbrs	r3, 7
 3e8:	07 c0       	rjmp	.+14     	; 0x3f8 <vfprintf+0x204>
 3ea:	60 81       	ld	r22, Z
 3ec:	71 81       	ldd	r23, Z+1	; 0x01
 3ee:	82 81       	ldd	r24, Z+2	; 0x02
 3f0:	93 81       	ldd	r25, Z+3	; 0x03
 3f2:	0c 5f       	subi	r16, 0xFC	; 252
 3f4:	1f 4f       	sbci	r17, 0xFF	; 255
 3f6:	08 c0       	rjmp	.+16     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3f8:	60 81       	ld	r22, Z
 3fa:	71 81       	ldd	r23, Z+1	; 0x01
 3fc:	07 2e       	mov	r0, r23
 3fe:	00 0c       	add	r0, r0
 400:	88 0b       	sbc	r24, r24
 402:	99 0b       	sbc	r25, r25
 404:	0e 5f       	subi	r16, 0xFE	; 254
 406:	1f 4f       	sbci	r17, 0xFF	; 255
 408:	f3 2d       	mov	r31, r3
 40a:	ff 76       	andi	r31, 0x6F	; 111
 40c:	3f 2e       	mov	r3, r31
 40e:	97 ff       	sbrs	r25, 7
 410:	09 c0       	rjmp	.+18     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 412:	90 95       	com	r25
 414:	80 95       	com	r24
 416:	70 95       	com	r23
 418:	61 95       	neg	r22
 41a:	7f 4f       	sbci	r23, 0xFF	; 255
 41c:	8f 4f       	sbci	r24, 0xFF	; 255
 41e:	9f 4f       	sbci	r25, 0xFF	; 255
 420:	f0 68       	ori	r31, 0x80	; 128
 422:	3f 2e       	mov	r3, r31
 424:	2a e0       	ldi	r18, 0x0A	; 10
 426:	30 e0       	ldi	r19, 0x00	; 0
 428:	a3 01       	movw	r20, r6
 42a:	33 d1       	rcall	.+614    	; 0x692 <__ultoa_invert>
 42c:	88 2e       	mov	r8, r24
 42e:	86 18       	sub	r8, r6
 430:	44 c0       	rjmp	.+136    	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 432:	85 37       	cpi	r24, 0x75	; 117
 434:	31 f4       	brne	.+12     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 436:	23 2d       	mov	r18, r3
 438:	2f 7e       	andi	r18, 0xEF	; 239
 43a:	b2 2e       	mov	r11, r18
 43c:	2a e0       	ldi	r18, 0x0A	; 10
 43e:	30 e0       	ldi	r19, 0x00	; 0
 440:	25 c0       	rjmp	.+74     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 442:	93 2d       	mov	r25, r3
 444:	99 7f       	andi	r25, 0xF9	; 249
 446:	b9 2e       	mov	r11, r25
 448:	8f 36       	cpi	r24, 0x6F	; 111
 44a:	c1 f0       	breq	.+48     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 44c:	18 f4       	brcc	.+6      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 44e:	88 35       	cpi	r24, 0x58	; 88
 450:	79 f0       	breq	.+30     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 452:	ae c0       	rjmp	.+348    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 454:	80 37       	cpi	r24, 0x70	; 112
 456:	19 f0       	breq	.+6      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 458:	88 37       	cpi	r24, 0x78	; 120
 45a:	21 f0       	breq	.+8      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 45c:	a9 c0       	rjmp	.+338    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 45e:	e9 2f       	mov	r30, r25
 460:	e0 61       	ori	r30, 0x10	; 16
 462:	be 2e       	mov	r11, r30
 464:	b4 fe       	sbrs	r11, 4
 466:	0d c0       	rjmp	.+26     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 468:	fb 2d       	mov	r31, r11
 46a:	f4 60       	ori	r31, 0x04	; 4
 46c:	bf 2e       	mov	r11, r31
 46e:	09 c0       	rjmp	.+18     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 470:	34 fe       	sbrs	r3, 4
 472:	0a c0       	rjmp	.+20     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 474:	29 2f       	mov	r18, r25
 476:	26 60       	ori	r18, 0x06	; 6
 478:	b2 2e       	mov	r11, r18
 47a:	06 c0       	rjmp	.+12     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 47c:	28 e0       	ldi	r18, 0x08	; 8
 47e:	30 e0       	ldi	r19, 0x00	; 0
 480:	05 c0       	rjmp	.+10     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 482:	20 e1       	ldi	r18, 0x10	; 16
 484:	30 e0       	ldi	r19, 0x00	; 0
 486:	02 c0       	rjmp	.+4      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 488:	20 e1       	ldi	r18, 0x10	; 16
 48a:	32 e0       	ldi	r19, 0x02	; 2
 48c:	f8 01       	movw	r30, r16
 48e:	b7 fe       	sbrs	r11, 7
 490:	07 c0       	rjmp	.+14     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 492:	60 81       	ld	r22, Z
 494:	71 81       	ldd	r23, Z+1	; 0x01
 496:	82 81       	ldd	r24, Z+2	; 0x02
 498:	93 81       	ldd	r25, Z+3	; 0x03
 49a:	0c 5f       	subi	r16, 0xFC	; 252
 49c:	1f 4f       	sbci	r17, 0xFF	; 255
 49e:	06 c0       	rjmp	.+12     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4a0:	60 81       	ld	r22, Z
 4a2:	71 81       	ldd	r23, Z+1	; 0x01
 4a4:	80 e0       	ldi	r24, 0x00	; 0
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	0e 5f       	subi	r16, 0xFE	; 254
 4aa:	1f 4f       	sbci	r17, 0xFF	; 255
 4ac:	a3 01       	movw	r20, r6
 4ae:	f1 d0       	rcall	.+482    	; 0x692 <__ultoa_invert>
 4b0:	88 2e       	mov	r8, r24
 4b2:	86 18       	sub	r8, r6
 4b4:	fb 2d       	mov	r31, r11
 4b6:	ff 77       	andi	r31, 0x7F	; 127
 4b8:	3f 2e       	mov	r3, r31
 4ba:	36 fe       	sbrs	r3, 6
 4bc:	0d c0       	rjmp	.+26     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4be:	23 2d       	mov	r18, r3
 4c0:	2e 7f       	andi	r18, 0xFE	; 254
 4c2:	a2 2e       	mov	r10, r18
 4c4:	89 14       	cp	r8, r9
 4c6:	58 f4       	brcc	.+22     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4c8:	34 fe       	sbrs	r3, 4
 4ca:	0b c0       	rjmp	.+22     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4cc:	32 fc       	sbrc	r3, 2
 4ce:	09 c0       	rjmp	.+18     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4d0:	83 2d       	mov	r24, r3
 4d2:	8e 7e       	andi	r24, 0xEE	; 238
 4d4:	a8 2e       	mov	r10, r24
 4d6:	05 c0       	rjmp	.+10     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4d8:	b8 2c       	mov	r11, r8
 4da:	a3 2c       	mov	r10, r3
 4dc:	03 c0       	rjmp	.+6      	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4de:	b8 2c       	mov	r11, r8
 4e0:	01 c0       	rjmp	.+2      	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4e2:	b9 2c       	mov	r11, r9
 4e4:	a4 fe       	sbrs	r10, 4
 4e6:	0f c0       	rjmp	.+30     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 4e8:	fe 01       	movw	r30, r28
 4ea:	e8 0d       	add	r30, r8
 4ec:	f1 1d       	adc	r31, r1
 4ee:	80 81       	ld	r24, Z
 4f0:	80 33       	cpi	r24, 0x30	; 48
 4f2:	21 f4       	brne	.+8      	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4f4:	9a 2d       	mov	r25, r10
 4f6:	99 7e       	andi	r25, 0xE9	; 233
 4f8:	a9 2e       	mov	r10, r25
 4fa:	09 c0       	rjmp	.+18     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4fc:	a2 fe       	sbrs	r10, 2
 4fe:	06 c0       	rjmp	.+12     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 500:	b3 94       	inc	r11
 502:	b3 94       	inc	r11
 504:	04 c0       	rjmp	.+8      	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 506:	8a 2d       	mov	r24, r10
 508:	86 78       	andi	r24, 0x86	; 134
 50a:	09 f0       	breq	.+2      	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 50c:	b3 94       	inc	r11
 50e:	a3 fc       	sbrc	r10, 3
 510:	10 c0       	rjmp	.+32     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 512:	a0 fe       	sbrs	r10, 0
 514:	06 c0       	rjmp	.+12     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 516:	b2 14       	cp	r11, r2
 518:	80 f4       	brcc	.+32     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 51a:	28 0c       	add	r2, r8
 51c:	92 2c       	mov	r9, r2
 51e:	9b 18       	sub	r9, r11
 520:	0d c0       	rjmp	.+26     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 522:	b2 14       	cp	r11, r2
 524:	58 f4       	brcc	.+22     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 526:	b6 01       	movw	r22, r12
 528:	80 e2       	ldi	r24, 0x20	; 32
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	76 d0       	rcall	.+236    	; 0x61a <fputc>
 52e:	b3 94       	inc	r11
 530:	f8 cf       	rjmp	.-16     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 532:	b2 14       	cp	r11, r2
 534:	18 f4       	brcc	.+6      	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 536:	2b 18       	sub	r2, r11
 538:	02 c0       	rjmp	.+4      	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 53a:	98 2c       	mov	r9, r8
 53c:	21 2c       	mov	r2, r1
 53e:	a4 fe       	sbrs	r10, 4
 540:	0f c0       	rjmp	.+30     	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 542:	b6 01       	movw	r22, r12
 544:	80 e3       	ldi	r24, 0x30	; 48
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	68 d0       	rcall	.+208    	; 0x61a <fputc>
 54a:	a2 fe       	sbrs	r10, 2
 54c:	16 c0       	rjmp	.+44     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 54e:	a1 fc       	sbrc	r10, 1
 550:	03 c0       	rjmp	.+6      	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 552:	88 e7       	ldi	r24, 0x78	; 120
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	02 c0       	rjmp	.+4      	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 558:	88 e5       	ldi	r24, 0x58	; 88
 55a:	90 e0       	ldi	r25, 0x00	; 0
 55c:	b6 01       	movw	r22, r12
 55e:	0c c0       	rjmp	.+24     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 560:	8a 2d       	mov	r24, r10
 562:	86 78       	andi	r24, 0x86	; 134
 564:	51 f0       	breq	.+20     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 566:	a1 fe       	sbrs	r10, 1
 568:	02 c0       	rjmp	.+4      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 56a:	8b e2       	ldi	r24, 0x2B	; 43
 56c:	01 c0       	rjmp	.+2      	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 56e:	80 e2       	ldi	r24, 0x20	; 32
 570:	a7 fc       	sbrc	r10, 7
 572:	8d e2       	ldi	r24, 0x2D	; 45
 574:	b6 01       	movw	r22, r12
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	50 d0       	rcall	.+160    	; 0x61a <fputc>
 57a:	89 14       	cp	r8, r9
 57c:	30 f4       	brcc	.+12     	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 57e:	b6 01       	movw	r22, r12
 580:	80 e3       	ldi	r24, 0x30	; 48
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	4a d0       	rcall	.+148    	; 0x61a <fputc>
 586:	9a 94       	dec	r9
 588:	f8 cf       	rjmp	.-16     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 58a:	8a 94       	dec	r8
 58c:	f3 01       	movw	r30, r6
 58e:	e8 0d       	add	r30, r8
 590:	f1 1d       	adc	r31, r1
 592:	80 81       	ld	r24, Z
 594:	b6 01       	movw	r22, r12
 596:	90 e0       	ldi	r25, 0x00	; 0
 598:	40 d0       	rcall	.+128    	; 0x61a <fputc>
 59a:	81 10       	cpse	r8, r1
 59c:	f6 cf       	rjmp	.-20     	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 59e:	22 20       	and	r2, r2
 5a0:	09 f4       	brne	.+2      	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 5a2:	4e ce       	rjmp	.-868    	; 0x240 <vfprintf+0x4c>
 5a4:	b6 01       	movw	r22, r12
 5a6:	80 e2       	ldi	r24, 0x20	; 32
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	37 d0       	rcall	.+110    	; 0x61a <fputc>
 5ac:	2a 94       	dec	r2
 5ae:	f7 cf       	rjmp	.-18     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 5b0:	f6 01       	movw	r30, r12
 5b2:	86 81       	ldd	r24, Z+6	; 0x06
 5b4:	97 81       	ldd	r25, Z+7	; 0x07
 5b6:	02 c0       	rjmp	.+4      	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5b8:	8f ef       	ldi	r24, 0xFF	; 255
 5ba:	9f ef       	ldi	r25, 0xFF	; 255
 5bc:	2b 96       	adiw	r28, 0x0b	; 11
 5be:	0f b6       	in	r0, 0x3f	; 63
 5c0:	f8 94       	cli
 5c2:	de bf       	out	0x3e, r29	; 62
 5c4:	0f be       	out	0x3f, r0	; 63
 5c6:	cd bf       	out	0x3d, r28	; 61
 5c8:	df 91       	pop	r29
 5ca:	cf 91       	pop	r28
 5cc:	1f 91       	pop	r17
 5ce:	0f 91       	pop	r16
 5d0:	ff 90       	pop	r15
 5d2:	ef 90       	pop	r14
 5d4:	df 90       	pop	r13
 5d6:	cf 90       	pop	r12
 5d8:	bf 90       	pop	r11
 5da:	af 90       	pop	r10
 5dc:	9f 90       	pop	r9
 5de:	8f 90       	pop	r8
 5e0:	7f 90       	pop	r7
 5e2:	6f 90       	pop	r6
 5e4:	5f 90       	pop	r5
 5e6:	4f 90       	pop	r4
 5e8:	3f 90       	pop	r3
 5ea:	2f 90       	pop	r2
 5ec:	08 95       	ret

000005ee <strnlen_P>:
 5ee:	fc 01       	movw	r30, r24
 5f0:	05 90       	lpm	r0, Z+
 5f2:	61 50       	subi	r22, 0x01	; 1
 5f4:	70 40       	sbci	r23, 0x00	; 0
 5f6:	01 10       	cpse	r0, r1
 5f8:	d8 f7       	brcc	.-10     	; 0x5f0 <strnlen_P+0x2>
 5fa:	80 95       	com	r24
 5fc:	90 95       	com	r25
 5fe:	8e 0f       	add	r24, r30
 600:	9f 1f       	adc	r25, r31
 602:	08 95       	ret

00000604 <strnlen>:
 604:	fc 01       	movw	r30, r24
 606:	61 50       	subi	r22, 0x01	; 1
 608:	70 40       	sbci	r23, 0x00	; 0
 60a:	01 90       	ld	r0, Z+
 60c:	01 10       	cpse	r0, r1
 60e:	d8 f7       	brcc	.-10     	; 0x606 <strnlen+0x2>
 610:	80 95       	com	r24
 612:	90 95       	com	r25
 614:	8e 0f       	add	r24, r30
 616:	9f 1f       	adc	r25, r31
 618:	08 95       	ret

0000061a <fputc>:
 61a:	0f 93       	push	r16
 61c:	1f 93       	push	r17
 61e:	cf 93       	push	r28
 620:	df 93       	push	r29
 622:	fb 01       	movw	r30, r22
 624:	23 81       	ldd	r18, Z+3	; 0x03
 626:	21 fd       	sbrc	r18, 1
 628:	03 c0       	rjmp	.+6      	; 0x630 <fputc+0x16>
 62a:	8f ef       	ldi	r24, 0xFF	; 255
 62c:	9f ef       	ldi	r25, 0xFF	; 255
 62e:	2c c0       	rjmp	.+88     	; 0x688 <fputc+0x6e>
 630:	22 ff       	sbrs	r18, 2
 632:	16 c0       	rjmp	.+44     	; 0x660 <fputc+0x46>
 634:	46 81       	ldd	r20, Z+6	; 0x06
 636:	57 81       	ldd	r21, Z+7	; 0x07
 638:	24 81       	ldd	r18, Z+4	; 0x04
 63a:	35 81       	ldd	r19, Z+5	; 0x05
 63c:	42 17       	cp	r20, r18
 63e:	53 07       	cpc	r21, r19
 640:	44 f4       	brge	.+16     	; 0x652 <fputc+0x38>
 642:	a0 81       	ld	r26, Z
 644:	b1 81       	ldd	r27, Z+1	; 0x01
 646:	9d 01       	movw	r18, r26
 648:	2f 5f       	subi	r18, 0xFF	; 255
 64a:	3f 4f       	sbci	r19, 0xFF	; 255
 64c:	31 83       	std	Z+1, r19	; 0x01
 64e:	20 83       	st	Z, r18
 650:	8c 93       	st	X, r24
 652:	26 81       	ldd	r18, Z+6	; 0x06
 654:	37 81       	ldd	r19, Z+7	; 0x07
 656:	2f 5f       	subi	r18, 0xFF	; 255
 658:	3f 4f       	sbci	r19, 0xFF	; 255
 65a:	37 83       	std	Z+7, r19	; 0x07
 65c:	26 83       	std	Z+6, r18	; 0x06
 65e:	14 c0       	rjmp	.+40     	; 0x688 <fputc+0x6e>
 660:	8b 01       	movw	r16, r22
 662:	ec 01       	movw	r28, r24
 664:	fb 01       	movw	r30, r22
 666:	00 84       	ldd	r0, Z+8	; 0x08
 668:	f1 85       	ldd	r31, Z+9	; 0x09
 66a:	e0 2d       	mov	r30, r0
 66c:	09 95       	icall
 66e:	89 2b       	or	r24, r25
 670:	e1 f6       	brne	.-72     	; 0x62a <fputc+0x10>
 672:	d8 01       	movw	r26, r16
 674:	16 96       	adiw	r26, 0x06	; 6
 676:	8d 91       	ld	r24, X+
 678:	9c 91       	ld	r25, X
 67a:	17 97       	sbiw	r26, 0x07	; 7
 67c:	01 96       	adiw	r24, 0x01	; 1
 67e:	17 96       	adiw	r26, 0x07	; 7
 680:	9c 93       	st	X, r25
 682:	8e 93       	st	-X, r24
 684:	16 97       	sbiw	r26, 0x06	; 6
 686:	ce 01       	movw	r24, r28
 688:	df 91       	pop	r29
 68a:	cf 91       	pop	r28
 68c:	1f 91       	pop	r17
 68e:	0f 91       	pop	r16
 690:	08 95       	ret

00000692 <__ultoa_invert>:
 692:	fa 01       	movw	r30, r20
 694:	aa 27       	eor	r26, r26
 696:	28 30       	cpi	r18, 0x08	; 8
 698:	51 f1       	breq	.+84     	; 0x6ee <__ultoa_invert+0x5c>
 69a:	20 31       	cpi	r18, 0x10	; 16
 69c:	81 f1       	breq	.+96     	; 0x6fe <__ultoa_invert+0x6c>
 69e:	e8 94       	clt
 6a0:	6f 93       	push	r22
 6a2:	6e 7f       	andi	r22, 0xFE	; 254
 6a4:	6e 5f       	subi	r22, 0xFE	; 254
 6a6:	7f 4f       	sbci	r23, 0xFF	; 255
 6a8:	8f 4f       	sbci	r24, 0xFF	; 255
 6aa:	9f 4f       	sbci	r25, 0xFF	; 255
 6ac:	af 4f       	sbci	r26, 0xFF	; 255
 6ae:	b1 e0       	ldi	r27, 0x01	; 1
 6b0:	3e d0       	rcall	.+124    	; 0x72e <__ultoa_invert+0x9c>
 6b2:	b4 e0       	ldi	r27, 0x04	; 4
 6b4:	3c d0       	rcall	.+120    	; 0x72e <__ultoa_invert+0x9c>
 6b6:	67 0f       	add	r22, r23
 6b8:	78 1f       	adc	r23, r24
 6ba:	89 1f       	adc	r24, r25
 6bc:	9a 1f       	adc	r25, r26
 6be:	a1 1d       	adc	r26, r1
 6c0:	68 0f       	add	r22, r24
 6c2:	79 1f       	adc	r23, r25
 6c4:	8a 1f       	adc	r24, r26
 6c6:	91 1d       	adc	r25, r1
 6c8:	a1 1d       	adc	r26, r1
 6ca:	6a 0f       	add	r22, r26
 6cc:	71 1d       	adc	r23, r1
 6ce:	81 1d       	adc	r24, r1
 6d0:	91 1d       	adc	r25, r1
 6d2:	a1 1d       	adc	r26, r1
 6d4:	20 d0       	rcall	.+64     	; 0x716 <__ultoa_invert+0x84>
 6d6:	09 f4       	brne	.+2      	; 0x6da <__ultoa_invert+0x48>
 6d8:	68 94       	set
 6da:	3f 91       	pop	r19
 6dc:	2a e0       	ldi	r18, 0x0A	; 10
 6de:	26 9f       	mul	r18, r22
 6e0:	11 24       	eor	r1, r1
 6e2:	30 19       	sub	r19, r0
 6e4:	30 5d       	subi	r19, 0xD0	; 208
 6e6:	31 93       	st	Z+, r19
 6e8:	de f6       	brtc	.-74     	; 0x6a0 <__ultoa_invert+0xe>
 6ea:	cf 01       	movw	r24, r30
 6ec:	08 95       	ret
 6ee:	46 2f       	mov	r20, r22
 6f0:	47 70       	andi	r20, 0x07	; 7
 6f2:	40 5d       	subi	r20, 0xD0	; 208
 6f4:	41 93       	st	Z+, r20
 6f6:	b3 e0       	ldi	r27, 0x03	; 3
 6f8:	0f d0       	rcall	.+30     	; 0x718 <__ultoa_invert+0x86>
 6fa:	c9 f7       	brne	.-14     	; 0x6ee <__ultoa_invert+0x5c>
 6fc:	f6 cf       	rjmp	.-20     	; 0x6ea <__ultoa_invert+0x58>
 6fe:	46 2f       	mov	r20, r22
 700:	4f 70       	andi	r20, 0x0F	; 15
 702:	40 5d       	subi	r20, 0xD0	; 208
 704:	4a 33       	cpi	r20, 0x3A	; 58
 706:	18 f0       	brcs	.+6      	; 0x70e <__ultoa_invert+0x7c>
 708:	49 5d       	subi	r20, 0xD9	; 217
 70a:	31 fd       	sbrc	r19, 1
 70c:	40 52       	subi	r20, 0x20	; 32
 70e:	41 93       	st	Z+, r20
 710:	02 d0       	rcall	.+4      	; 0x716 <__ultoa_invert+0x84>
 712:	a9 f7       	brne	.-22     	; 0x6fe <__ultoa_invert+0x6c>
 714:	ea cf       	rjmp	.-44     	; 0x6ea <__ultoa_invert+0x58>
 716:	b4 e0       	ldi	r27, 0x04	; 4
 718:	a6 95       	lsr	r26
 71a:	97 95       	ror	r25
 71c:	87 95       	ror	r24
 71e:	77 95       	ror	r23
 720:	67 95       	ror	r22
 722:	ba 95       	dec	r27
 724:	c9 f7       	brne	.-14     	; 0x718 <__ultoa_invert+0x86>
 726:	00 97       	sbiw	r24, 0x00	; 0
 728:	61 05       	cpc	r22, r1
 72a:	71 05       	cpc	r23, r1
 72c:	08 95       	ret
 72e:	9b 01       	movw	r18, r22
 730:	ac 01       	movw	r20, r24
 732:	0a 2e       	mov	r0, r26
 734:	06 94       	lsr	r0
 736:	57 95       	ror	r21
 738:	47 95       	ror	r20
 73a:	37 95       	ror	r19
 73c:	27 95       	ror	r18
 73e:	ba 95       	dec	r27
 740:	c9 f7       	brne	.-14     	; 0x734 <__ultoa_invert+0xa2>
 742:	62 0f       	add	r22, r18
 744:	73 1f       	adc	r23, r19
 746:	84 1f       	adc	r24, r20
 748:	95 1f       	adc	r25, r21
 74a:	a0 1d       	adc	r26, r0
 74c:	08 95       	ret

0000074e <_exit>:
 74e:	f8 94       	cli

00000750 <__stop_program>:
 750:	ff cf       	rjmp	.-2      	; 0x750 <__stop_program>
