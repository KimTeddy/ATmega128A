
TimerCounter_cl1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007a  00800100  00000896  0000092a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000896  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080017a  0080017a  000009a4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009a4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a00  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000a40  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d32  00000000  00000000  00000ac8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a33  00000000  00000000  000017fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004ba  00000000  00000000  0000222d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000018c  00000000  00000000  000026e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004fb  00000000  00000000  00002874  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000038e  00000000  00000000  00002d6f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  000030fd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	5a c0       	rjmp	.+180    	; 0x10a <__vector_21>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 e9       	ldi	r30, 0x96	; 150
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 37       	cpi	r26, 0x7A	; 122
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e7       	ldi	r26, 0x7A	; 122
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 38       	cpi	r26, 0x80	; 128
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	6b d0       	rcall	.+214    	; 0x19a <main>
  c4:	e6 c3       	rjmp	.+1996   	; 0x892 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <PORT_init>:
void TIMER0_init();
int TIMER0_time(int);

void PORT_init()
{
	DDRB |= 0X10;
  c8:	87 b3       	in	r24, 0x17	; 23
  ca:	80 61       	ori	r24, 0x10	; 16
  cc:	87 bb       	out	0x17, r24	; 23
  ce:	08 95       	ret

000000d0 <ADC_init>:
	//PORTD |= 0X01;//내부 풀업 저항 사용
}

void ADC_init(uint8_t ch)
{
	ADMUX  |= _BV(REFS0);			//기준전압 AVCC
  d0:	97 b1       	in	r25, 0x07	; 7
  d2:	90 64       	ori	r25, 0x40	; 64
  d4:	97 b9       	out	0x07, r25	; 7
	ADCSRA |= 0x07;					//분주비 128
  d6:	96 b1       	in	r25, 0x06	; 6
  d8:	97 60       	ori	r25, 0x07	; 7
  da:	96 b9       	out	0x06, r25	; 6
	ADCSRA |= _BV(ADEN);			//ADC ENABLE
  dc:	96 b1       	in	r25, 0x06	; 6
  de:	90 68       	ori	r25, 0x80	; 128
  e0:	96 b9       	out	0x06, r25	; 6
	ADCSRA |= _BV(ADIE);			//ADC 인터럽트 ENABLE
  e2:	96 b1       	in	r25, 0x06	; 6
  e4:	98 60       	ori	r25, 0x08	; 8
  e6:	96 b9       	out	0x06, r25	; 6
	//ADCSRA |= _BV(ADFR);
	ADMUX   = ((ADMUX & 0xE0) | ch);//채널 선택
  e8:	97 b1       	in	r25, 0x07	; 7
  ea:	90 7e       	andi	r25, 0xE0	; 224
  ec:	89 2b       	or	r24, r25
  ee:	87 b9       	out	0x07, r24	; 7
	sei();							//SREG = 0x80;글로벌 인터럽트 허용
  f0:	78 94       	sei
  f2:	08 95       	ret

000000f4 <TIMER0_init>:
}

void TIMER0_init()
{
	
	TCCR0 |= _BV(CS02) | _BV(CS01) | _BV(CS00);//분주비 128로 설정
  f4:	83 b7       	in	r24, 0x33	; 51
  f6:	87 60       	ori	r24, 0x07	; 7
  f8:	83 bf       	out	0x33, r24	; 51
	TCCR0 |= _BV(COM01);
  fa:	83 b7       	in	r24, 0x33	; 51
  fc:	80 62       	ori	r24, 0x20	; 32
  fe:	83 bf       	out	0x33, r24	; 51
	TCCR0 |= _BV(WGM01) | _BV(WGM00);
 100:	83 b7       	in	r24, 0x33	; 51
 102:	88 64       	ori	r24, 0x48	; 72
 104:	83 bf       	out	0x33, r24	; 51
	OCR0 = 0;
 106:	11 be       	out	0x31, r1	; 49
 108:	08 95       	ret

0000010a <__vector_21>:
}



ISR(ADC_vect)
{
 10a:	1f 92       	push	r1
 10c:	0f 92       	push	r0
 10e:	0f b6       	in	r0, 0x3f	; 63
 110:	0f 92       	push	r0
 112:	11 24       	eor	r1, r1
 114:	0b b6       	in	r0, 0x3b	; 59
 116:	0f 92       	push	r0
 118:	2f 93       	push	r18
 11a:	3f 93       	push	r19
 11c:	4f 93       	push	r20
 11e:	5f 93       	push	r21
 120:	6f 93       	push	r22
 122:	7f 93       	push	r23
 124:	8f 93       	push	r24
 126:	9f 93       	push	r25
 128:	af 93       	push	r26
 12a:	bf 93       	push	r27
 12c:	cf 93       	push	r28
 12e:	df 93       	push	r29
 130:	ef 93       	push	r30
 132:	ff 93       	push	r31
	int read = ADC;//ADC 값 읽기
 134:	c4 b1       	in	r28, 0x04	; 4
 136:	d5 b1       	in	r29, 0x05	; 5
	OCR0 = read/4;
 138:	8c 2f       	mov	r24, r28
 13a:	9d 2f       	mov	r25, r29
 13c:	99 23       	and	r25, r25
 13e:	0c f4       	brge	.+2      	; 0x142 <__vector_21+0x38>
 140:	03 96       	adiw	r24, 0x03	; 3
 142:	95 95       	asr	r25
 144:	87 95       	ror	r24
 146:	95 95       	asr	r25
 148:	87 95       	ror	r24
 14a:	81 bf       	out	0x31, r24	; 49
	printf("ADC end.\t");
 14c:	8c e1       	ldi	r24, 0x1C	; 28
 14e:	91 e0       	ldi	r25, 0x01	; 1
 150:	9f 93       	push	r25
 152:	8f 93       	push	r24
 154:	ae d0       	rcall	.+348    	; 0x2b2 <printf>
	printf("ADC = %4d\r\n\n", read);//AD Conversion 된 값을 터미널로 전송
 156:	df 93       	push	r29
 158:	cf 93       	push	r28
 15a:	86 e2       	ldi	r24, 0x26	; 38
 15c:	91 e0       	ldi	r25, 0x01	; 1
 15e:	9f 93       	push	r25
 160:	8f 93       	push	r24
 162:	a7 d0       	rcall	.+334    	; 0x2b2 <printf>
	//_delay_ms(1000);
}
 164:	0f 90       	pop	r0
 166:	0f 90       	pop	r0
 168:	0f 90       	pop	r0
 16a:	0f 90       	pop	r0
 16c:	0f 90       	pop	r0
 16e:	0f 90       	pop	r0
 170:	ff 91       	pop	r31
 172:	ef 91       	pop	r30
 174:	df 91       	pop	r29
 176:	cf 91       	pop	r28
 178:	bf 91       	pop	r27
 17a:	af 91       	pop	r26
 17c:	9f 91       	pop	r25
 17e:	8f 91       	pop	r24
 180:	7f 91       	pop	r23
 182:	6f 91       	pop	r22
 184:	5f 91       	pop	r21
 186:	4f 91       	pop	r20
 188:	3f 91       	pop	r19
 18a:	2f 91       	pop	r18
 18c:	0f 90       	pop	r0
 18e:	0b be       	out	0x3b, r0	; 59
 190:	0f 90       	pop	r0
 192:	0f be       	out	0x3f, r0	; 63
 194:	0f 90       	pop	r0
 196:	1f 90       	pop	r1
 198:	18 95       	reti

0000019a <main>:

int main(void)
{
	stdout = &OUTPUT;
 19a:	ea e7       	ldi	r30, 0x7A	; 122
 19c:	f1 e0       	ldi	r31, 0x01	; 1
 19e:	8e e0       	ldi	r24, 0x0E	; 14
 1a0:	91 e0       	ldi	r25, 0x01	; 1
 1a2:	93 83       	std	Z+3, r25	; 0x03
 1a4:	82 83       	std	Z+2, r24	; 0x02
	stdin = &INPUT;
 1a6:	80 e0       	ldi	r24, 0x00	; 0
 1a8:	91 e0       	ldi	r25, 0x01	; 1
 1aa:	91 83       	std	Z+1, r25	; 0x01
 1ac:	80 83       	st	Z, r24
	
	PORT_init();//포트 설정
 1ae:	8c df       	rcall	.-232    	; 0xc8 <PORT_init>
	UART1_init(9600);//UART1 사용
 1b0:	60 e8       	ldi	r22, 0x80	; 128
 1b2:	75 e2       	ldi	r23, 0x25	; 37
 1b4:	80 e0       	ldi	r24, 0x00	; 0
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	16 d0       	rcall	.+44     	; 0x1e6 <UART1_init>
	ADC_init(0);//ADC0 사용
 1ba:	80 e0       	ldi	r24, 0x00	; 0
 1bc:	89 df       	rcall	.-238    	; 0xd0 <ADC_init>
	//INT0_init();//INT0 외부 인터럽트 사용
	TIMER0_init();//TIMER0 사용
 1be:	9a df       	rcall	.-204    	; 0xf4 <TIMER0_init>
	
	printf("\r\n");
 1c0:	8f e5       	ldi	r24, 0x5F	; 95
 1c2:	91 e0       	ldi	r25, 0x01	; 1
 1c4:	89 d0       	rcall	.+274    	; 0x2d8 <puts>
	printf("\r\n");
 1c6:	8f e5       	ldi	r24, 0x5F	; 95
 1c8:	91 e0       	ldi	r25, 0x01	; 1
 1ca:	86 d0       	rcall	.+268    	; 0x2d8 <puts>
	printf("	Myongji University, Dept of Electronic Eng.\r\n");
 1cc:	83 e3       	ldi	r24, 0x33	; 51
 1ce:	91 e0       	ldi	r25, 0x01	; 1
 1d0:	83 d0       	rcall	.+262    	; 0x2d8 <puts>
	printf("		  60191798 김영찬\r\n");
 1d2:	81 e6       	ldi	r24, 0x61	; 97
 1d4:	91 e0       	ldi	r25, 0x01	; 1
 1d6:	80 d0       	rcall	.+256    	; 0x2d8 <puts>
 1d8:	8f e5       	ldi	r24, 0x5F	; 95
	printf("\r\n");
 1da:	91 e0       	ldi	r25, 0x01	; 1
 1dc:	7d d0       	rcall	.+250    	; 0x2d8 <puts>
 1de:	86 b1       	in	r24, 0x06	; 6
 1e0:	80 64       	ori	r24, 0x40	; 64
	
	
	
	while (1) {
		ADCSRA |= _BV(ADSC);//광센서가 붙어있는 ADC0 변환 시작
 1e2:	86 b9       	out	0x06, r24	; 6
 1e4:	fc cf       	rjmp	.-8      	; 0x1de <main+0x44>

000001e6 <UART1_init>:
 1e6:	dc 01       	movw	r26, r24
 1e8:	cb 01       	movw	r24, r22
#include <avr/sfr_defs.h>
#include <stdio.h>

void UART1_init(unsigned long baudrate)
{
	unsigned long ubrr = (16000000/(8*baudrate)) - 1;
 1ea:	88 0f       	add	r24, r24
 1ec:	99 1f       	adc	r25, r25
 1ee:	aa 1f       	adc	r26, r26
 1f0:	bb 1f       	adc	r27, r27
 1f2:	88 0f       	add	r24, r24
 1f4:	99 1f       	adc	r25, r25
 1f6:	aa 1f       	adc	r26, r26
 1f8:	bb 1f       	adc	r27, r27
 1fa:	9c 01       	movw	r18, r24
 1fc:	ad 01       	movw	r20, r26
 1fe:	22 0f       	add	r18, r18
 200:	33 1f       	adc	r19, r19
 202:	44 1f       	adc	r20, r20
 204:	55 1f       	adc	r21, r21
 206:	60 e0       	ldi	r22, 0x00	; 0
 208:	74 e2       	ldi	r23, 0x24	; 36
 20a:	84 ef       	ldi	r24, 0xF4	; 244
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	2f d0       	rcall	.+94     	; 0x26e <__udivmodsi4>
 210:	ba 01       	movw	r22, r20
 212:	a9 01       	movw	r20, r18
 214:	41 50       	subi	r20, 0x01	; 1
 216:	51 09       	sbc	r21, r1
 218:	61 09       	sbc	r22, r1
 21a:	71 09       	sbc	r23, r1
	UBRR1H = ubrr>>8;			//통신 속도 9600
 21c:	bb 27       	eor	r27, r27
 21e:	a7 2f       	mov	r26, r23
 220:	96 2f       	mov	r25, r22
 222:	85 2f       	mov	r24, r21
 224:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
	UBRR1L = ubrr & 0x0ff;			//통신 속도 9600
 228:	40 93 99 00 	sts	0x0099, r20	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
	UCSR1A |= _BV(U2X1);	//2배속 모드
 22c:	eb e9       	ldi	r30, 0x9B	; 155
 22e:	f0 e0       	ldi	r31, 0x00	; 0
 230:	80 81       	ld	r24, Z
 232:	82 60       	ori	r24, 0x02	; 2
 234:	80 83       	st	Z, r24
	UCSR1C |= 0X06;			//비동기, 8비트데이터, 패리티 없음, 1비트 정지 비트 모드
 236:	ed e9       	ldi	r30, 0x9D	; 157
 238:	f0 e0       	ldi	r31, 0x00	; 0
 23a:	80 81       	ld	r24, Z
 23c:	86 60       	ori	r24, 0x06	; 6
 23e:	80 83       	st	Z, r24
	UCSR1B |= _BV(RXEN1);	//수신 활성화
 240:	ea e9       	ldi	r30, 0x9A	; 154
 242:	f0 e0       	ldi	r31, 0x00	; 0
 244:	80 81       	ld	r24, Z
 246:	80 61       	ori	r24, 0x10	; 16
 248:	80 83       	st	Z, r24
	UCSR1B |= _BV(TXEN1);	//발신 활성화
 24a:	80 81       	ld	r24, Z
 24c:	88 60       	ori	r24, 0x08	; 8
 24e:	80 83       	st	Z, r24
 250:	08 95       	ret

00000252 <UART1_rx>:
}
unsigned char UART1_rx(void)
{
	while( !(UCSR1A&(1 << RXC1)) );//수신 대기
 252:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 256:	88 23       	and	r24, r24
 258:	e4 f7       	brge	.-8      	; 0x252 <UART1_rx>
	return UDR1;
 25a:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
}
 25e:	08 95       	ret

00000260 <UART1_tx>:
void UART1_tx(unsigned char data)
{
	while( !(UCSR1A&(1 << UDRE1)) );//송신 대기
 260:	90 91 9b 00 	lds	r25, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 264:	95 ff       	sbrs	r25, 5
 266:	fc cf       	rjmp	.-8      	; 0x260 <UART1_tx>
	UDR1 = data;					//데이터 전송
 268:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 26c:	08 95       	ret

0000026e <__udivmodsi4>:
 26e:	a1 e2       	ldi	r26, 0x21	; 33
 270:	1a 2e       	mov	r1, r26
 272:	aa 1b       	sub	r26, r26
 274:	bb 1b       	sub	r27, r27
 276:	fd 01       	movw	r30, r26
 278:	0d c0       	rjmp	.+26     	; 0x294 <__udivmodsi4_ep>

0000027a <__udivmodsi4_loop>:
 27a:	aa 1f       	adc	r26, r26
 27c:	bb 1f       	adc	r27, r27
 27e:	ee 1f       	adc	r30, r30
 280:	ff 1f       	adc	r31, r31
 282:	a2 17       	cp	r26, r18
 284:	b3 07       	cpc	r27, r19
 286:	e4 07       	cpc	r30, r20
 288:	f5 07       	cpc	r31, r21
 28a:	20 f0       	brcs	.+8      	; 0x294 <__udivmodsi4_ep>
 28c:	a2 1b       	sub	r26, r18
 28e:	b3 0b       	sbc	r27, r19
 290:	e4 0b       	sbc	r30, r20
 292:	f5 0b       	sbc	r31, r21

00000294 <__udivmodsi4_ep>:
 294:	66 1f       	adc	r22, r22
 296:	77 1f       	adc	r23, r23
 298:	88 1f       	adc	r24, r24
 29a:	99 1f       	adc	r25, r25
 29c:	1a 94       	dec	r1
 29e:	69 f7       	brne	.-38     	; 0x27a <__udivmodsi4_loop>
 2a0:	60 95       	com	r22
 2a2:	70 95       	com	r23
 2a4:	80 95       	com	r24
 2a6:	90 95       	com	r25
 2a8:	9b 01       	movw	r18, r22
 2aa:	ac 01       	movw	r20, r24
 2ac:	bd 01       	movw	r22, r26
 2ae:	cf 01       	movw	r24, r30
 2b0:	08 95       	ret

000002b2 <printf>:
 2b2:	cf 93       	push	r28
 2b4:	df 93       	push	r29
 2b6:	cd b7       	in	r28, 0x3d	; 61
 2b8:	de b7       	in	r29, 0x3e	; 62
 2ba:	ae 01       	movw	r20, r28
 2bc:	4b 5f       	subi	r20, 0xFB	; 251
 2be:	5f 4f       	sbci	r21, 0xFF	; 255
 2c0:	fa 01       	movw	r30, r20
 2c2:	61 91       	ld	r22, Z+
 2c4:	71 91       	ld	r23, Z+
 2c6:	af 01       	movw	r20, r30
 2c8:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <__data_end+0x2>
 2cc:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <__data_end+0x3>
 2d0:	33 d0       	rcall	.+102    	; 0x338 <vfprintf>
 2d2:	df 91       	pop	r29
 2d4:	cf 91       	pop	r28
 2d6:	08 95       	ret

000002d8 <puts>:
 2d8:	0f 93       	push	r16
 2da:	1f 93       	push	r17
 2dc:	cf 93       	push	r28
 2de:	df 93       	push	r29
 2e0:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <__data_end+0x2>
 2e4:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <__data_end+0x3>
 2e8:	23 81       	ldd	r18, Z+3	; 0x03
 2ea:	21 ff       	sbrs	r18, 1
 2ec:	1b c0       	rjmp	.+54     	; 0x324 <puts+0x4c>
 2ee:	8c 01       	movw	r16, r24
 2f0:	d0 e0       	ldi	r29, 0x00	; 0
 2f2:	c0 e0       	ldi	r28, 0x00	; 0
 2f4:	f8 01       	movw	r30, r16
 2f6:	81 91       	ld	r24, Z+
 2f8:	8f 01       	movw	r16, r30
 2fa:	60 91 7c 01 	lds	r22, 0x017C	; 0x80017c <__data_end+0x2>
 2fe:	70 91 7d 01 	lds	r23, 0x017D	; 0x80017d <__data_end+0x3>
 302:	db 01       	movw	r26, r22
 304:	18 96       	adiw	r26, 0x08	; 8
 306:	ed 91       	ld	r30, X+
 308:	fc 91       	ld	r31, X
 30a:	19 97       	sbiw	r26, 0x09	; 9
 30c:	88 23       	and	r24, r24
 30e:	31 f0       	breq	.+12     	; 0x31c <puts+0x44>
 310:	09 95       	icall
 312:	89 2b       	or	r24, r25
 314:	79 f3       	breq	.-34     	; 0x2f4 <puts+0x1c>
 316:	df ef       	ldi	r29, 0xFF	; 255
 318:	cf ef       	ldi	r28, 0xFF	; 255
 31a:	ec cf       	rjmp	.-40     	; 0x2f4 <puts+0x1c>
 31c:	8a e0       	ldi	r24, 0x0A	; 10
 31e:	09 95       	icall
 320:	89 2b       	or	r24, r25
 322:	19 f0       	breq	.+6      	; 0x32a <puts+0x52>
 324:	8f ef       	ldi	r24, 0xFF	; 255
 326:	9f ef       	ldi	r25, 0xFF	; 255
 328:	02 c0       	rjmp	.+4      	; 0x32e <puts+0x56>
 32a:	8d 2f       	mov	r24, r29
 32c:	9c 2f       	mov	r25, r28
 32e:	df 91       	pop	r29
 330:	cf 91       	pop	r28
 332:	1f 91       	pop	r17
 334:	0f 91       	pop	r16
 336:	08 95       	ret

00000338 <vfprintf>:
 338:	2f 92       	push	r2
 33a:	3f 92       	push	r3
 33c:	4f 92       	push	r4
 33e:	5f 92       	push	r5
 340:	6f 92       	push	r6
 342:	7f 92       	push	r7
 344:	8f 92       	push	r8
 346:	9f 92       	push	r9
 348:	af 92       	push	r10
 34a:	bf 92       	push	r11
 34c:	cf 92       	push	r12
 34e:	df 92       	push	r13
 350:	ef 92       	push	r14
 352:	ff 92       	push	r15
 354:	0f 93       	push	r16
 356:	1f 93       	push	r17
 358:	cf 93       	push	r28
 35a:	df 93       	push	r29
 35c:	cd b7       	in	r28, 0x3d	; 61
 35e:	de b7       	in	r29, 0x3e	; 62
 360:	2b 97       	sbiw	r28, 0x0b	; 11
 362:	0f b6       	in	r0, 0x3f	; 63
 364:	f8 94       	cli
 366:	de bf       	out	0x3e, r29	; 62
 368:	0f be       	out	0x3f, r0	; 63
 36a:	cd bf       	out	0x3d, r28	; 61
 36c:	6c 01       	movw	r12, r24
 36e:	7b 01       	movw	r14, r22
 370:	8a 01       	movw	r16, r20
 372:	fc 01       	movw	r30, r24
 374:	17 82       	std	Z+7, r1	; 0x07
 376:	16 82       	std	Z+6, r1	; 0x06
 378:	83 81       	ldd	r24, Z+3	; 0x03
 37a:	81 ff       	sbrs	r24, 1
 37c:	bf c1       	rjmp	.+894    	; 0x6fc <__LOCK_REGION_LENGTH__+0x2fc>
 37e:	ce 01       	movw	r24, r28
 380:	01 96       	adiw	r24, 0x01	; 1
 382:	3c 01       	movw	r6, r24
 384:	f6 01       	movw	r30, r12
 386:	93 81       	ldd	r25, Z+3	; 0x03
 388:	f7 01       	movw	r30, r14
 38a:	93 fd       	sbrc	r25, 3
 38c:	85 91       	lpm	r24, Z+
 38e:	93 ff       	sbrs	r25, 3
 390:	81 91       	ld	r24, Z+
 392:	7f 01       	movw	r14, r30
 394:	88 23       	and	r24, r24
 396:	09 f4       	brne	.+2      	; 0x39a <vfprintf+0x62>
 398:	ad c1       	rjmp	.+858    	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 39a:	85 32       	cpi	r24, 0x25	; 37
 39c:	39 f4       	brne	.+14     	; 0x3ac <vfprintf+0x74>
 39e:	93 fd       	sbrc	r25, 3
 3a0:	85 91       	lpm	r24, Z+
 3a2:	93 ff       	sbrs	r25, 3
 3a4:	81 91       	ld	r24, Z+
 3a6:	7f 01       	movw	r14, r30
 3a8:	85 32       	cpi	r24, 0x25	; 37
 3aa:	21 f4       	brne	.+8      	; 0x3b4 <vfprintf+0x7c>
 3ac:	b6 01       	movw	r22, r12
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	d6 d1       	rcall	.+940    	; 0x75e <fputc>
 3b2:	e8 cf       	rjmp	.-48     	; 0x384 <vfprintf+0x4c>
 3b4:	91 2c       	mov	r9, r1
 3b6:	21 2c       	mov	r2, r1
 3b8:	31 2c       	mov	r3, r1
 3ba:	ff e1       	ldi	r31, 0x1F	; 31
 3bc:	f3 15       	cp	r31, r3
 3be:	d8 f0       	brcs	.+54     	; 0x3f6 <vfprintf+0xbe>
 3c0:	8b 32       	cpi	r24, 0x2B	; 43
 3c2:	79 f0       	breq	.+30     	; 0x3e2 <vfprintf+0xaa>
 3c4:	38 f4       	brcc	.+14     	; 0x3d4 <vfprintf+0x9c>
 3c6:	80 32       	cpi	r24, 0x20	; 32
 3c8:	79 f0       	breq	.+30     	; 0x3e8 <vfprintf+0xb0>
 3ca:	83 32       	cpi	r24, 0x23	; 35
 3cc:	a1 f4       	brne	.+40     	; 0x3f6 <vfprintf+0xbe>
 3ce:	23 2d       	mov	r18, r3
 3d0:	20 61       	ori	r18, 0x10	; 16
 3d2:	1d c0       	rjmp	.+58     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3d4:	8d 32       	cpi	r24, 0x2D	; 45
 3d6:	61 f0       	breq	.+24     	; 0x3f0 <vfprintf+0xb8>
 3d8:	80 33       	cpi	r24, 0x30	; 48
 3da:	69 f4       	brne	.+26     	; 0x3f6 <vfprintf+0xbe>
 3dc:	23 2d       	mov	r18, r3
 3de:	21 60       	ori	r18, 0x01	; 1
 3e0:	16 c0       	rjmp	.+44     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3e2:	83 2d       	mov	r24, r3
 3e4:	82 60       	ori	r24, 0x02	; 2
 3e6:	38 2e       	mov	r3, r24
 3e8:	e3 2d       	mov	r30, r3
 3ea:	e4 60       	ori	r30, 0x04	; 4
 3ec:	3e 2e       	mov	r3, r30
 3ee:	2a c0       	rjmp	.+84     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 3f0:	f3 2d       	mov	r31, r3
 3f2:	f8 60       	ori	r31, 0x08	; 8
 3f4:	1d c0       	rjmp	.+58     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 3f6:	37 fc       	sbrc	r3, 7
 3f8:	2d c0       	rjmp	.+90     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 3fa:	20 ed       	ldi	r18, 0xD0	; 208
 3fc:	28 0f       	add	r18, r24
 3fe:	2a 30       	cpi	r18, 0x0A	; 10
 400:	40 f0       	brcs	.+16     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 402:	8e 32       	cpi	r24, 0x2E	; 46
 404:	b9 f4       	brne	.+46     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 406:	36 fc       	sbrc	r3, 6
 408:	75 c1       	rjmp	.+746    	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 40a:	23 2d       	mov	r18, r3
 40c:	20 64       	ori	r18, 0x40	; 64
 40e:	32 2e       	mov	r3, r18
 410:	19 c0       	rjmp	.+50     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 412:	36 fe       	sbrs	r3, 6
 414:	06 c0       	rjmp	.+12     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 416:	8a e0       	ldi	r24, 0x0A	; 10
 418:	98 9e       	mul	r9, r24
 41a:	20 0d       	add	r18, r0
 41c:	11 24       	eor	r1, r1
 41e:	92 2e       	mov	r9, r18
 420:	11 c0       	rjmp	.+34     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 422:	ea e0       	ldi	r30, 0x0A	; 10
 424:	2e 9e       	mul	r2, r30
 426:	20 0d       	add	r18, r0
 428:	11 24       	eor	r1, r1
 42a:	22 2e       	mov	r2, r18
 42c:	f3 2d       	mov	r31, r3
 42e:	f0 62       	ori	r31, 0x20	; 32
 430:	3f 2e       	mov	r3, r31
 432:	08 c0       	rjmp	.+16     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 434:	8c 36       	cpi	r24, 0x6C	; 108
 436:	21 f4       	brne	.+8      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 438:	83 2d       	mov	r24, r3
 43a:	80 68       	ori	r24, 0x80	; 128
 43c:	38 2e       	mov	r3, r24
 43e:	02 c0       	rjmp	.+4      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 440:	88 36       	cpi	r24, 0x68	; 104
 442:	41 f4       	brne	.+16     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 444:	f7 01       	movw	r30, r14
 446:	93 fd       	sbrc	r25, 3
 448:	85 91       	lpm	r24, Z+
 44a:	93 ff       	sbrs	r25, 3
 44c:	81 91       	ld	r24, Z+
 44e:	7f 01       	movw	r14, r30
 450:	81 11       	cpse	r24, r1
 452:	b3 cf       	rjmp	.-154    	; 0x3ba <vfprintf+0x82>
 454:	98 2f       	mov	r25, r24
 456:	9f 7d       	andi	r25, 0xDF	; 223
 458:	95 54       	subi	r25, 0x45	; 69
 45a:	93 30       	cpi	r25, 0x03	; 3
 45c:	28 f4       	brcc	.+10     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 45e:	0c 5f       	subi	r16, 0xFC	; 252
 460:	1f 4f       	sbci	r17, 0xFF	; 255
 462:	9f e3       	ldi	r25, 0x3F	; 63
 464:	99 83       	std	Y+1, r25	; 0x01
 466:	0d c0       	rjmp	.+26     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 468:	83 36       	cpi	r24, 0x63	; 99
 46a:	31 f0       	breq	.+12     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 46c:	83 37       	cpi	r24, 0x73	; 115
 46e:	71 f0       	breq	.+28     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 470:	83 35       	cpi	r24, 0x53	; 83
 472:	09 f0       	breq	.+2      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 474:	55 c0       	rjmp	.+170    	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 476:	20 c0       	rjmp	.+64     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 478:	f8 01       	movw	r30, r16
 47a:	80 81       	ld	r24, Z
 47c:	89 83       	std	Y+1, r24	; 0x01
 47e:	0e 5f       	subi	r16, 0xFE	; 254
 480:	1f 4f       	sbci	r17, 0xFF	; 255
 482:	88 24       	eor	r8, r8
 484:	83 94       	inc	r8
 486:	91 2c       	mov	r9, r1
 488:	53 01       	movw	r10, r6
 48a:	12 c0       	rjmp	.+36     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 48c:	28 01       	movw	r4, r16
 48e:	f2 e0       	ldi	r31, 0x02	; 2
 490:	4f 0e       	add	r4, r31
 492:	51 1c       	adc	r5, r1
 494:	f8 01       	movw	r30, r16
 496:	a0 80       	ld	r10, Z
 498:	b1 80       	ldd	r11, Z+1	; 0x01
 49a:	36 fe       	sbrs	r3, 6
 49c:	03 c0       	rjmp	.+6      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 49e:	69 2d       	mov	r22, r9
 4a0:	70 e0       	ldi	r23, 0x00	; 0
 4a2:	02 c0       	rjmp	.+4      	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 4a4:	6f ef       	ldi	r22, 0xFF	; 255
 4a6:	7f ef       	ldi	r23, 0xFF	; 255
 4a8:	c5 01       	movw	r24, r10
 4aa:	4e d1       	rcall	.+668    	; 0x748 <strnlen>
 4ac:	4c 01       	movw	r8, r24
 4ae:	82 01       	movw	r16, r4
 4b0:	f3 2d       	mov	r31, r3
 4b2:	ff 77       	andi	r31, 0x7F	; 127
 4b4:	3f 2e       	mov	r3, r31
 4b6:	15 c0       	rjmp	.+42     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4b8:	28 01       	movw	r4, r16
 4ba:	22 e0       	ldi	r18, 0x02	; 2
 4bc:	42 0e       	add	r4, r18
 4be:	51 1c       	adc	r5, r1
 4c0:	f8 01       	movw	r30, r16
 4c2:	a0 80       	ld	r10, Z
 4c4:	b1 80       	ldd	r11, Z+1	; 0x01
 4c6:	36 fe       	sbrs	r3, 6
 4c8:	03 c0       	rjmp	.+6      	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4ca:	69 2d       	mov	r22, r9
 4cc:	70 e0       	ldi	r23, 0x00	; 0
 4ce:	02 c0       	rjmp	.+4      	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4d0:	6f ef       	ldi	r22, 0xFF	; 255
 4d2:	7f ef       	ldi	r23, 0xFF	; 255
 4d4:	c5 01       	movw	r24, r10
 4d6:	2d d1       	rcall	.+602    	; 0x732 <strnlen_P>
 4d8:	4c 01       	movw	r8, r24
 4da:	f3 2d       	mov	r31, r3
 4dc:	f0 68       	ori	r31, 0x80	; 128
 4de:	3f 2e       	mov	r3, r31
 4e0:	82 01       	movw	r16, r4
 4e2:	33 fc       	sbrc	r3, 3
 4e4:	19 c0       	rjmp	.+50     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 4e6:	82 2d       	mov	r24, r2
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	88 16       	cp	r8, r24
 4ec:	99 06       	cpc	r9, r25
 4ee:	a0 f4       	brcc	.+40     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 4f0:	b6 01       	movw	r22, r12
 4f2:	80 e2       	ldi	r24, 0x20	; 32
 4f4:	90 e0       	ldi	r25, 0x00	; 0
 4f6:	33 d1       	rcall	.+614    	; 0x75e <fputc>
 4f8:	2a 94       	dec	r2
 4fa:	f5 cf       	rjmp	.-22     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4fc:	f5 01       	movw	r30, r10
 4fe:	37 fc       	sbrc	r3, 7
 500:	85 91       	lpm	r24, Z+
 502:	37 fe       	sbrs	r3, 7
 504:	81 91       	ld	r24, Z+
 506:	5f 01       	movw	r10, r30
 508:	b6 01       	movw	r22, r12
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	28 d1       	rcall	.+592    	; 0x75e <fputc>
 50e:	21 10       	cpse	r2, r1
 510:	2a 94       	dec	r2
 512:	21 e0       	ldi	r18, 0x01	; 1
 514:	82 1a       	sub	r8, r18
 516:	91 08       	sbc	r9, r1
 518:	81 14       	cp	r8, r1
 51a:	91 04       	cpc	r9, r1
 51c:	79 f7       	brne	.-34     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 51e:	e1 c0       	rjmp	.+450    	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 520:	84 36       	cpi	r24, 0x64	; 100
 522:	11 f0       	breq	.+4      	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 524:	89 36       	cpi	r24, 0x69	; 105
 526:	39 f5       	brne	.+78     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 528:	f8 01       	movw	r30, r16
 52a:	37 fe       	sbrs	r3, 7
 52c:	07 c0       	rjmp	.+14     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 52e:	60 81       	ld	r22, Z
 530:	71 81       	ldd	r23, Z+1	; 0x01
 532:	82 81       	ldd	r24, Z+2	; 0x02
 534:	93 81       	ldd	r25, Z+3	; 0x03
 536:	0c 5f       	subi	r16, 0xFC	; 252
 538:	1f 4f       	sbci	r17, 0xFF	; 255
 53a:	08 c0       	rjmp	.+16     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 53c:	60 81       	ld	r22, Z
 53e:	71 81       	ldd	r23, Z+1	; 0x01
 540:	07 2e       	mov	r0, r23
 542:	00 0c       	add	r0, r0
 544:	88 0b       	sbc	r24, r24
 546:	99 0b       	sbc	r25, r25
 548:	0e 5f       	subi	r16, 0xFE	; 254
 54a:	1f 4f       	sbci	r17, 0xFF	; 255
 54c:	f3 2d       	mov	r31, r3
 54e:	ff 76       	andi	r31, 0x6F	; 111
 550:	3f 2e       	mov	r3, r31
 552:	97 ff       	sbrs	r25, 7
 554:	09 c0       	rjmp	.+18     	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 556:	90 95       	com	r25
 558:	80 95       	com	r24
 55a:	70 95       	com	r23
 55c:	61 95       	neg	r22
 55e:	7f 4f       	sbci	r23, 0xFF	; 255
 560:	8f 4f       	sbci	r24, 0xFF	; 255
 562:	9f 4f       	sbci	r25, 0xFF	; 255
 564:	f0 68       	ori	r31, 0x80	; 128
 566:	3f 2e       	mov	r3, r31
 568:	2a e0       	ldi	r18, 0x0A	; 10
 56a:	30 e0       	ldi	r19, 0x00	; 0
 56c:	a3 01       	movw	r20, r6
 56e:	33 d1       	rcall	.+614    	; 0x7d6 <__ultoa_invert>
 570:	88 2e       	mov	r8, r24
 572:	86 18       	sub	r8, r6
 574:	44 c0       	rjmp	.+136    	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 576:	85 37       	cpi	r24, 0x75	; 117
 578:	31 f4       	brne	.+12     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 57a:	23 2d       	mov	r18, r3
 57c:	2f 7e       	andi	r18, 0xEF	; 239
 57e:	b2 2e       	mov	r11, r18
 580:	2a e0       	ldi	r18, 0x0A	; 10
 582:	30 e0       	ldi	r19, 0x00	; 0
 584:	25 c0       	rjmp	.+74     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 586:	93 2d       	mov	r25, r3
 588:	99 7f       	andi	r25, 0xF9	; 249
 58a:	b9 2e       	mov	r11, r25
 58c:	8f 36       	cpi	r24, 0x6F	; 111
 58e:	c1 f0       	breq	.+48     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 590:	18 f4       	brcc	.+6      	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 592:	88 35       	cpi	r24, 0x58	; 88
 594:	79 f0       	breq	.+30     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 596:	ae c0       	rjmp	.+348    	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 598:	80 37       	cpi	r24, 0x70	; 112
 59a:	19 f0       	breq	.+6      	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 59c:	88 37       	cpi	r24, 0x78	; 120
 59e:	21 f0       	breq	.+8      	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 5a0:	a9 c0       	rjmp	.+338    	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 5a2:	e9 2f       	mov	r30, r25
 5a4:	e0 61       	ori	r30, 0x10	; 16
 5a6:	be 2e       	mov	r11, r30
 5a8:	b4 fe       	sbrs	r11, 4
 5aa:	0d c0       	rjmp	.+26     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5ac:	fb 2d       	mov	r31, r11
 5ae:	f4 60       	ori	r31, 0x04	; 4
 5b0:	bf 2e       	mov	r11, r31
 5b2:	09 c0       	rjmp	.+18     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5b4:	34 fe       	sbrs	r3, 4
 5b6:	0a c0       	rjmp	.+20     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5b8:	29 2f       	mov	r18, r25
 5ba:	26 60       	ori	r18, 0x06	; 6
 5bc:	b2 2e       	mov	r11, r18
 5be:	06 c0       	rjmp	.+12     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5c0:	28 e0       	ldi	r18, 0x08	; 8
 5c2:	30 e0       	ldi	r19, 0x00	; 0
 5c4:	05 c0       	rjmp	.+10     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5c6:	20 e1       	ldi	r18, 0x10	; 16
 5c8:	30 e0       	ldi	r19, 0x00	; 0
 5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5cc:	20 e1       	ldi	r18, 0x10	; 16
 5ce:	32 e0       	ldi	r19, 0x02	; 2
 5d0:	f8 01       	movw	r30, r16
 5d2:	b7 fe       	sbrs	r11, 7
 5d4:	07 c0       	rjmp	.+14     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5d6:	60 81       	ld	r22, Z
 5d8:	71 81       	ldd	r23, Z+1	; 0x01
 5da:	82 81       	ldd	r24, Z+2	; 0x02
 5dc:	93 81       	ldd	r25, Z+3	; 0x03
 5de:	0c 5f       	subi	r16, 0xFC	; 252
 5e0:	1f 4f       	sbci	r17, 0xFF	; 255
 5e2:	06 c0       	rjmp	.+12     	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5e4:	60 81       	ld	r22, Z
 5e6:	71 81       	ldd	r23, Z+1	; 0x01
 5e8:	80 e0       	ldi	r24, 0x00	; 0
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	0e 5f       	subi	r16, 0xFE	; 254
 5ee:	1f 4f       	sbci	r17, 0xFF	; 255
 5f0:	a3 01       	movw	r20, r6
 5f2:	f1 d0       	rcall	.+482    	; 0x7d6 <__ultoa_invert>
 5f4:	88 2e       	mov	r8, r24
 5f6:	86 18       	sub	r8, r6
 5f8:	fb 2d       	mov	r31, r11
 5fa:	ff 77       	andi	r31, 0x7F	; 127
 5fc:	3f 2e       	mov	r3, r31
 5fe:	36 fe       	sbrs	r3, 6
 600:	0d c0       	rjmp	.+26     	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 602:	23 2d       	mov	r18, r3
 604:	2e 7f       	andi	r18, 0xFE	; 254
 606:	a2 2e       	mov	r10, r18
 608:	89 14       	cp	r8, r9
 60a:	58 f4       	brcc	.+22     	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
 60c:	34 fe       	sbrs	r3, 4
 60e:	0b c0       	rjmp	.+22     	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
 610:	32 fc       	sbrc	r3, 2
 612:	09 c0       	rjmp	.+18     	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
 614:	83 2d       	mov	r24, r3
 616:	8e 7e       	andi	r24, 0xEE	; 238
 618:	a8 2e       	mov	r10, r24
 61a:	05 c0       	rjmp	.+10     	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
 61c:	b8 2c       	mov	r11, r8
 61e:	a3 2c       	mov	r10, r3
 620:	03 c0       	rjmp	.+6      	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 622:	b8 2c       	mov	r11, r8
 624:	01 c0       	rjmp	.+2      	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 626:	b9 2c       	mov	r11, r9
 628:	a4 fe       	sbrs	r10, 4
 62a:	0f c0       	rjmp	.+30     	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
 62c:	fe 01       	movw	r30, r28
 62e:	e8 0d       	add	r30, r8
 630:	f1 1d       	adc	r31, r1
 632:	80 81       	ld	r24, Z
 634:	80 33       	cpi	r24, 0x30	; 48
 636:	21 f4       	brne	.+8      	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 638:	9a 2d       	mov	r25, r10
 63a:	99 7e       	andi	r25, 0xE9	; 233
 63c:	a9 2e       	mov	r10, r25
 63e:	09 c0       	rjmp	.+18     	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 640:	a2 fe       	sbrs	r10, 2
 642:	06 c0       	rjmp	.+12     	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 644:	b3 94       	inc	r11
 646:	b3 94       	inc	r11
 648:	04 c0       	rjmp	.+8      	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 64a:	8a 2d       	mov	r24, r10
 64c:	86 78       	andi	r24, 0x86	; 134
 64e:	09 f0       	breq	.+2      	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 650:	b3 94       	inc	r11
 652:	a3 fc       	sbrc	r10, 3
 654:	10 c0       	rjmp	.+32     	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 656:	a0 fe       	sbrs	r10, 0
 658:	06 c0       	rjmp	.+12     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 65a:	b2 14       	cp	r11, r2
 65c:	80 f4       	brcc	.+32     	; 0x67e <__LOCK_REGION_LENGTH__+0x27e>
 65e:	28 0c       	add	r2, r8
 660:	92 2c       	mov	r9, r2
 662:	9b 18       	sub	r9, r11
 664:	0d c0       	rjmp	.+26     	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 666:	b2 14       	cp	r11, r2
 668:	58 f4       	brcc	.+22     	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 66a:	b6 01       	movw	r22, r12
 66c:	80 e2       	ldi	r24, 0x20	; 32
 66e:	90 e0       	ldi	r25, 0x00	; 0
 670:	76 d0       	rcall	.+236    	; 0x75e <fputc>
 672:	b3 94       	inc	r11
 674:	f8 cf       	rjmp	.-16     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 676:	b2 14       	cp	r11, r2
 678:	18 f4       	brcc	.+6      	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 67a:	2b 18       	sub	r2, r11
 67c:	02 c0       	rjmp	.+4      	; 0x682 <__LOCK_REGION_LENGTH__+0x282>
 67e:	98 2c       	mov	r9, r8
 680:	21 2c       	mov	r2, r1
 682:	a4 fe       	sbrs	r10, 4
 684:	0f c0       	rjmp	.+30     	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 686:	b6 01       	movw	r22, r12
 688:	80 e3       	ldi	r24, 0x30	; 48
 68a:	90 e0       	ldi	r25, 0x00	; 0
 68c:	68 d0       	rcall	.+208    	; 0x75e <fputc>
 68e:	a2 fe       	sbrs	r10, 2
 690:	16 c0       	rjmp	.+44     	; 0x6be <__LOCK_REGION_LENGTH__+0x2be>
 692:	a1 fc       	sbrc	r10, 1
 694:	03 c0       	rjmp	.+6      	; 0x69c <__LOCK_REGION_LENGTH__+0x29c>
 696:	88 e7       	ldi	r24, 0x78	; 120
 698:	90 e0       	ldi	r25, 0x00	; 0
 69a:	02 c0       	rjmp	.+4      	; 0x6a0 <__LOCK_REGION_LENGTH__+0x2a0>
 69c:	88 e5       	ldi	r24, 0x58	; 88
 69e:	90 e0       	ldi	r25, 0x00	; 0
 6a0:	b6 01       	movw	r22, r12
 6a2:	0c c0       	rjmp	.+24     	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 6a4:	8a 2d       	mov	r24, r10
 6a6:	86 78       	andi	r24, 0x86	; 134
 6a8:	51 f0       	breq	.+20     	; 0x6be <__LOCK_REGION_LENGTH__+0x2be>
 6aa:	a1 fe       	sbrs	r10, 1
 6ac:	02 c0       	rjmp	.+4      	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 6ae:	8b e2       	ldi	r24, 0x2B	; 43
 6b0:	01 c0       	rjmp	.+2      	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 6b2:	80 e2       	ldi	r24, 0x20	; 32
 6b4:	a7 fc       	sbrc	r10, 7
 6b6:	8d e2       	ldi	r24, 0x2D	; 45
 6b8:	b6 01       	movw	r22, r12
 6ba:	90 e0       	ldi	r25, 0x00	; 0
 6bc:	50 d0       	rcall	.+160    	; 0x75e <fputc>
 6be:	89 14       	cp	r8, r9
 6c0:	30 f4       	brcc	.+12     	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
 6c2:	b6 01       	movw	r22, r12
 6c4:	80 e3       	ldi	r24, 0x30	; 48
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	4a d0       	rcall	.+148    	; 0x75e <fputc>
 6ca:	9a 94       	dec	r9
 6cc:	f8 cf       	rjmp	.-16     	; 0x6be <__LOCK_REGION_LENGTH__+0x2be>
 6ce:	8a 94       	dec	r8
 6d0:	f3 01       	movw	r30, r6
 6d2:	e8 0d       	add	r30, r8
 6d4:	f1 1d       	adc	r31, r1
 6d6:	80 81       	ld	r24, Z
 6d8:	b6 01       	movw	r22, r12
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	40 d0       	rcall	.+128    	; 0x75e <fputc>
 6de:	81 10       	cpse	r8, r1
 6e0:	f6 cf       	rjmp	.-20     	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
 6e2:	22 20       	and	r2, r2
 6e4:	09 f4       	brne	.+2      	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6e6:	4e ce       	rjmp	.-868    	; 0x384 <vfprintf+0x4c>
 6e8:	b6 01       	movw	r22, r12
 6ea:	80 e2       	ldi	r24, 0x20	; 32
 6ec:	90 e0       	ldi	r25, 0x00	; 0
 6ee:	37 d0       	rcall	.+110    	; 0x75e <fputc>
 6f0:	2a 94       	dec	r2
 6f2:	f7 cf       	rjmp	.-18     	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 6f4:	f6 01       	movw	r30, r12
 6f6:	86 81       	ldd	r24, Z+6	; 0x06
 6f8:	97 81       	ldd	r25, Z+7	; 0x07
 6fa:	02 c0       	rjmp	.+4      	; 0x700 <__LOCK_REGION_LENGTH__+0x300>
 6fc:	8f ef       	ldi	r24, 0xFF	; 255
 6fe:	9f ef       	ldi	r25, 0xFF	; 255
 700:	2b 96       	adiw	r28, 0x0b	; 11
 702:	0f b6       	in	r0, 0x3f	; 63
 704:	f8 94       	cli
 706:	de bf       	out	0x3e, r29	; 62
 708:	0f be       	out	0x3f, r0	; 63
 70a:	cd bf       	out	0x3d, r28	; 61
 70c:	df 91       	pop	r29
 70e:	cf 91       	pop	r28
 710:	1f 91       	pop	r17
 712:	0f 91       	pop	r16
 714:	ff 90       	pop	r15
 716:	ef 90       	pop	r14
 718:	df 90       	pop	r13
 71a:	cf 90       	pop	r12
 71c:	bf 90       	pop	r11
 71e:	af 90       	pop	r10
 720:	9f 90       	pop	r9
 722:	8f 90       	pop	r8
 724:	7f 90       	pop	r7
 726:	6f 90       	pop	r6
 728:	5f 90       	pop	r5
 72a:	4f 90       	pop	r4
 72c:	3f 90       	pop	r3
 72e:	2f 90       	pop	r2
 730:	08 95       	ret

00000732 <strnlen_P>:
 732:	fc 01       	movw	r30, r24
 734:	05 90       	lpm	r0, Z+
 736:	61 50       	subi	r22, 0x01	; 1
 738:	70 40       	sbci	r23, 0x00	; 0
 73a:	01 10       	cpse	r0, r1
 73c:	d8 f7       	brcc	.-10     	; 0x734 <strnlen_P+0x2>
 73e:	80 95       	com	r24
 740:	90 95       	com	r25
 742:	8e 0f       	add	r24, r30
 744:	9f 1f       	adc	r25, r31
 746:	08 95       	ret

00000748 <strnlen>:
 748:	fc 01       	movw	r30, r24
 74a:	61 50       	subi	r22, 0x01	; 1
 74c:	70 40       	sbci	r23, 0x00	; 0
 74e:	01 90       	ld	r0, Z+
 750:	01 10       	cpse	r0, r1
 752:	d8 f7       	brcc	.-10     	; 0x74a <strnlen+0x2>
 754:	80 95       	com	r24
 756:	90 95       	com	r25
 758:	8e 0f       	add	r24, r30
 75a:	9f 1f       	adc	r25, r31
 75c:	08 95       	ret

0000075e <fputc>:
 75e:	0f 93       	push	r16
 760:	1f 93       	push	r17
 762:	cf 93       	push	r28
 764:	df 93       	push	r29
 766:	fb 01       	movw	r30, r22
 768:	23 81       	ldd	r18, Z+3	; 0x03
 76a:	21 fd       	sbrc	r18, 1
 76c:	03 c0       	rjmp	.+6      	; 0x774 <fputc+0x16>
 76e:	8f ef       	ldi	r24, 0xFF	; 255
 770:	9f ef       	ldi	r25, 0xFF	; 255
 772:	2c c0       	rjmp	.+88     	; 0x7cc <fputc+0x6e>
 774:	22 ff       	sbrs	r18, 2
 776:	16 c0       	rjmp	.+44     	; 0x7a4 <fputc+0x46>
 778:	46 81       	ldd	r20, Z+6	; 0x06
 77a:	57 81       	ldd	r21, Z+7	; 0x07
 77c:	24 81       	ldd	r18, Z+4	; 0x04
 77e:	35 81       	ldd	r19, Z+5	; 0x05
 780:	42 17       	cp	r20, r18
 782:	53 07       	cpc	r21, r19
 784:	44 f4       	brge	.+16     	; 0x796 <fputc+0x38>
 786:	a0 81       	ld	r26, Z
 788:	b1 81       	ldd	r27, Z+1	; 0x01
 78a:	9d 01       	movw	r18, r26
 78c:	2f 5f       	subi	r18, 0xFF	; 255
 78e:	3f 4f       	sbci	r19, 0xFF	; 255
 790:	31 83       	std	Z+1, r19	; 0x01
 792:	20 83       	st	Z, r18
 794:	8c 93       	st	X, r24
 796:	26 81       	ldd	r18, Z+6	; 0x06
 798:	37 81       	ldd	r19, Z+7	; 0x07
 79a:	2f 5f       	subi	r18, 0xFF	; 255
 79c:	3f 4f       	sbci	r19, 0xFF	; 255
 79e:	37 83       	std	Z+7, r19	; 0x07
 7a0:	26 83       	std	Z+6, r18	; 0x06
 7a2:	14 c0       	rjmp	.+40     	; 0x7cc <fputc+0x6e>
 7a4:	8b 01       	movw	r16, r22
 7a6:	ec 01       	movw	r28, r24
 7a8:	fb 01       	movw	r30, r22
 7aa:	00 84       	ldd	r0, Z+8	; 0x08
 7ac:	f1 85       	ldd	r31, Z+9	; 0x09
 7ae:	e0 2d       	mov	r30, r0
 7b0:	09 95       	icall
 7b2:	89 2b       	or	r24, r25
 7b4:	e1 f6       	brne	.-72     	; 0x76e <fputc+0x10>
 7b6:	d8 01       	movw	r26, r16
 7b8:	16 96       	adiw	r26, 0x06	; 6
 7ba:	8d 91       	ld	r24, X+
 7bc:	9c 91       	ld	r25, X
 7be:	17 97       	sbiw	r26, 0x07	; 7
 7c0:	01 96       	adiw	r24, 0x01	; 1
 7c2:	17 96       	adiw	r26, 0x07	; 7
 7c4:	9c 93       	st	X, r25
 7c6:	8e 93       	st	-X, r24
 7c8:	16 97       	sbiw	r26, 0x06	; 6
 7ca:	ce 01       	movw	r24, r28
 7cc:	df 91       	pop	r29
 7ce:	cf 91       	pop	r28
 7d0:	1f 91       	pop	r17
 7d2:	0f 91       	pop	r16
 7d4:	08 95       	ret

000007d6 <__ultoa_invert>:
 7d6:	fa 01       	movw	r30, r20
 7d8:	aa 27       	eor	r26, r26
 7da:	28 30       	cpi	r18, 0x08	; 8
 7dc:	51 f1       	breq	.+84     	; 0x832 <__ultoa_invert+0x5c>
 7de:	20 31       	cpi	r18, 0x10	; 16
 7e0:	81 f1       	breq	.+96     	; 0x842 <__ultoa_invert+0x6c>
 7e2:	e8 94       	clt
 7e4:	6f 93       	push	r22
 7e6:	6e 7f       	andi	r22, 0xFE	; 254
 7e8:	6e 5f       	subi	r22, 0xFE	; 254
 7ea:	7f 4f       	sbci	r23, 0xFF	; 255
 7ec:	8f 4f       	sbci	r24, 0xFF	; 255
 7ee:	9f 4f       	sbci	r25, 0xFF	; 255
 7f0:	af 4f       	sbci	r26, 0xFF	; 255
 7f2:	b1 e0       	ldi	r27, 0x01	; 1
 7f4:	3e d0       	rcall	.+124    	; 0x872 <__ultoa_invert+0x9c>
 7f6:	b4 e0       	ldi	r27, 0x04	; 4
 7f8:	3c d0       	rcall	.+120    	; 0x872 <__ultoa_invert+0x9c>
 7fa:	67 0f       	add	r22, r23
 7fc:	78 1f       	adc	r23, r24
 7fe:	89 1f       	adc	r24, r25
 800:	9a 1f       	adc	r25, r26
 802:	a1 1d       	adc	r26, r1
 804:	68 0f       	add	r22, r24
 806:	79 1f       	adc	r23, r25
 808:	8a 1f       	adc	r24, r26
 80a:	91 1d       	adc	r25, r1
 80c:	a1 1d       	adc	r26, r1
 80e:	6a 0f       	add	r22, r26
 810:	71 1d       	adc	r23, r1
 812:	81 1d       	adc	r24, r1
 814:	91 1d       	adc	r25, r1
 816:	a1 1d       	adc	r26, r1
 818:	20 d0       	rcall	.+64     	; 0x85a <__ultoa_invert+0x84>
 81a:	09 f4       	brne	.+2      	; 0x81e <__ultoa_invert+0x48>
 81c:	68 94       	set
 81e:	3f 91       	pop	r19
 820:	2a e0       	ldi	r18, 0x0A	; 10
 822:	26 9f       	mul	r18, r22
 824:	11 24       	eor	r1, r1
 826:	30 19       	sub	r19, r0
 828:	30 5d       	subi	r19, 0xD0	; 208
 82a:	31 93       	st	Z+, r19
 82c:	de f6       	brtc	.-74     	; 0x7e4 <__ultoa_invert+0xe>
 82e:	cf 01       	movw	r24, r30
 830:	08 95       	ret
 832:	46 2f       	mov	r20, r22
 834:	47 70       	andi	r20, 0x07	; 7
 836:	40 5d       	subi	r20, 0xD0	; 208
 838:	41 93       	st	Z+, r20
 83a:	b3 e0       	ldi	r27, 0x03	; 3
 83c:	0f d0       	rcall	.+30     	; 0x85c <__ultoa_invert+0x86>
 83e:	c9 f7       	brne	.-14     	; 0x832 <__ultoa_invert+0x5c>
 840:	f6 cf       	rjmp	.-20     	; 0x82e <__ultoa_invert+0x58>
 842:	46 2f       	mov	r20, r22
 844:	4f 70       	andi	r20, 0x0F	; 15
 846:	40 5d       	subi	r20, 0xD0	; 208
 848:	4a 33       	cpi	r20, 0x3A	; 58
 84a:	18 f0       	brcs	.+6      	; 0x852 <__ultoa_invert+0x7c>
 84c:	49 5d       	subi	r20, 0xD9	; 217
 84e:	31 fd       	sbrc	r19, 1
 850:	40 52       	subi	r20, 0x20	; 32
 852:	41 93       	st	Z+, r20
 854:	02 d0       	rcall	.+4      	; 0x85a <__ultoa_invert+0x84>
 856:	a9 f7       	brne	.-22     	; 0x842 <__ultoa_invert+0x6c>
 858:	ea cf       	rjmp	.-44     	; 0x82e <__ultoa_invert+0x58>
 85a:	b4 e0       	ldi	r27, 0x04	; 4
 85c:	a6 95       	lsr	r26
 85e:	97 95       	ror	r25
 860:	87 95       	ror	r24
 862:	77 95       	ror	r23
 864:	67 95       	ror	r22
 866:	ba 95       	dec	r27
 868:	c9 f7       	brne	.-14     	; 0x85c <__ultoa_invert+0x86>
 86a:	00 97       	sbiw	r24, 0x00	; 0
 86c:	61 05       	cpc	r22, r1
 86e:	71 05       	cpc	r23, r1
 870:	08 95       	ret
 872:	9b 01       	movw	r18, r22
 874:	ac 01       	movw	r20, r24
 876:	0a 2e       	mov	r0, r26
 878:	06 94       	lsr	r0
 87a:	57 95       	ror	r21
 87c:	47 95       	ror	r20
 87e:	37 95       	ror	r19
 880:	27 95       	ror	r18
 882:	ba 95       	dec	r27
 884:	c9 f7       	brne	.-14     	; 0x878 <__ultoa_invert+0xa2>
 886:	62 0f       	add	r22, r18
 888:	73 1f       	adc	r23, r19
 88a:	84 1f       	adc	r24, r20
 88c:	95 1f       	adc	r25, r21
 88e:	a0 1d       	adc	r26, r0
 890:	08 95       	ret

00000892 <_exit>:
 892:	f8 94       	cli

00000894 <__stop_program>:
 894:	ff cf       	rjmp	.-2      	; 0x894 <__stop_program>
